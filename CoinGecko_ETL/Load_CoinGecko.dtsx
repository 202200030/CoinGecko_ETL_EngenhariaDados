<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/2/2025 6:23:14 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="FILIPE"
  DTS:CreatorName="FILIPE\filip"
  DTS:DTSID="{0530CC01-AC58-4E96-839A-55E47B3D10CE}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.2"
  DTS:LocaleID="2070"
  DTS:ObjectName="Load_CoinGecko"
  DTS:PackageType="5"
  DTS:VersionBuild="133"
  DTS:VersionGUID="{1AD6D00D-1D25-48FB-A276-C05DD8FCAD93}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C32F218C-D669-49E2-904E-3C83D114FB03}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2070"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\filip\OneDrive\Ambiente de Trabalho\Engenharia de dados\Novo Documento de Texto.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="25"
              DTS:DataScale="2"
              DTS:TextQualified="True"
              DTS:ObjectName="market_cap_usd"
              DTS:DTSID="{E370680D-132C-4E19-963D-A86E5BE53F18}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="19"
              DTS:DataScale="2"
              DTS:TextQualified="True"
              DTS:ObjectName="volume_usd"
              DTS:DTSID="{15DB6025-654E-4AC9-94D6-B9C1B8446E70}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="19"
              DTS:DataScale="8"
              DTS:TextQualified="True"
              DTS:ObjectName="price_usd"
              DTS:DTSID="{4FF6D463-F2D6-4661-A7CD-B626201A0944}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Script Component.time_id"
              DTS:DTSID="{E974B258-A1C8-4A7D-88C4-9D9A5523D66E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Script Component.crypto_id"
              DTS:DTSID="{01C0BECC-A7E3-413F-9270-E6E33FF044B6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="exchange_id"
              DTS:DTSID="{6A95AF46-6FF5-44D5-88C2-037FCEE3A392}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="event_date"
              DTS:DTSID="{C16C2378-F0E1-4FEC-91E3-2308167C77B9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="coin_code"
              DTS:DTSID="{8C5E4722-4AE8-49F2-B259-5D8058966305}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="DW_updated_on"
              DTS:DTSID="{AE90754B-E89C-4A74-9214-84BE0C4FEA3E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DW_source_system"
              DTS:DTSID="{3EC3F3CC-F11C-4A1C-8301-D8E534BC7470}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DW_run_id"
              DTS:DTSID="{C321C26D-D9FE-4987-85E4-E61C7F59183A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="64"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DW_row_checksum"
              DTS:DTSID="{77F24CB6-CE93-4DFE-BAEE-08027FB846BA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Lookup Crypto_Dim.crypto_id"
              DTS:DTSID="{343BEFB7-6767-43A5-9DBC-8A7E0366A8F6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Lookup Time_Dim.time_id"
              DTS:DTSID="{2507716E-0428-4E75-BFD0-11C39D490568}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{5FEAFA63-468C-4219-9204-F7D5338336DB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{DAADBC38-6DE6-42D5-A607-C0DE81D856DD}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
      DTS:ObjectName="localhost.Datawarehouse_CG">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=Datawarehouse_CG;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Load_CoinGecko-{CB35FB99-233F-4EEC-809F-508B1C6C64F0}localhost.Datawarehouse_CG;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{93A4D169-ABC4-4BD9-83D7-2AAE7CEBBAF7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ApiBaseUrl">
      <DTS:VariableValue
        DTS:DataType="8">https://api.coingecko.com/api/v3</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ECBF0D55-EF88-4894-ACA4-E64511F7F1E5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CoinCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{63952972-5FA3-4541-947C-1834AF5EDD1F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CoinId">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{57D2ABD8-03B3-4A30-9C3B-9F78A5DEF21D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CoinIds">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9B5327F9-9EFC-44CD-BF71-888F14EC7F87}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CoinListADO">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1DACDEB6-6595-4D27-B022-270837E3DCAB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CoinListEndpoint">
      <DTS:VariableValue
        DTS:DataType="8">/coins/list</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{208E2CE6-E062-42BC-A268-9ACDE5697B20}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CoinList_RS">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FA6D6F9F-A187-4C02-93EB-7BD5FA0A4B06}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExchangeListEndpoint">
      <DTS:VariableValue
        DTS:DataType="8">/exchanges/list</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CE62C921-BFBF-4008-9A81-09A80E148DEF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedRows_Crypto">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3402C9E2-3388-4E1F-8809-8442F47F8E7C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedRows_Exchange">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{23649CA4-787D-4C2A-9970-1346E021966D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MarketChartEndpoint">
      <DTS:VariableValue
        DTS:DataType="8">/coins/{id}/market_chart?vs_currency=usd&amp;days=1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1EEDC6BE-5A66-47C5-90D7-05D36EE20A85}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PageIndex">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B9C6397-6D56-4B96-B04B-CF7DCDFEE7C5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RunId">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FCDEE49D-1802-43F3-AA13-783CA29C369E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SuccessRows_Crypto">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B1CD6F9A-34C8-4D36-8CF4-4187CDACAE8E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SuccessRows_Exchange">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{10817871-9FBD-4108-B7F1-CF43E10E9514}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SuccessRows_Prices">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5739D390-5B61-4D72-8E69-FADB399F8A31}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SuccessRows_Time">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D5610B21-D349-47FE-ADF5-3BE687EB47D9}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::SuccessRows_Crypto] +&#xA;@[User::SuccessRows_Exchange] +&#xA;@[User::SuccessRows_Time]+&#xA;@[User::SuccessRows_Prices]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TotalSuccessRows">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Audit START"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E1DE0569-EB64-41E1-8DC7-E120F05D37BF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Audit START"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
          SQLTask:SqlStatementSource="INSERT INTO dbo.DW_Audit&#xA;(run_id, start_on, process_name, execution_status)&#xA;VALUES (?, GETDATE(), 'CoinGecko_ETL', 'STARTED');&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::RunId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="50" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\End Audit Process"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{67F4163C-0653-4437-8E0C-C03AC2445CFB}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="End Audit Process"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
          SQLTask:SqlStatementSource="/* End Audit – actualiza contagens e fecha a execução */&#xA;UPDATE dbo.DW_Audit&#xA;SET    success_row_count = ?,      -- 1.º parâmetro  (INT)&#xA;       end_on            = GETDATE(),&#xA;       execution_status  = 'SUCCESS'&#xA;WHERE  run_id = ?;                 -- 2.º parâmetro  (VARCHAR/NVARCHAR)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::TotalSuccessRows"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="0" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::RunId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="50" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate RunId"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{1FDFBC68-257C-40A1-A6EC-555CECB8F10F}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate RunId"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7dbcb6698d6045889d6f0779e4808f61"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::RunId">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7dbcb6698d6045889d6f0779e4808f61")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7dbcb6698d6045889d6f0779e4808f61")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_7dbcb6698d6045889d6f0779e4808f61.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0054C3C3-F243-4910-A390-0D3107271B8D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7dbcb6698d6045889d6f0779e4808f61</RootNamespace>
    <AssemblyName>ST_7dbcb6698d6045889d6f0779e4808f61</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_7dbcb6698d6045889d6f0779e4808f61
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            Dts.Variables["User::RunId"].Value = Guid.NewGuid().ToString();
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_7dbcb6698d6045889d6f0779e4808f61</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_7dbcb6698d6045889d6f0779e4808f61</msb:DisplayName>
    <msb:ProjectId>{80EB7595-466E-4569-AF18-880A39ECC0DC}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_7dbcb6698d6045889d6f0779e4808f61.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7dbcb6698d6045889d6f0779e4808f61.Properties.Settings.get_Default():ST_7dbcb6698d6045889d6f0779e4808f61.Properties.Sett" +
    "ings")]

namespace ST_7dbcb6698d6045889d6f0779e4808f61.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7dbcb6698d6045889d6f0779e4808f61.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7dbcb6698d6045889d6f0779e4808f61.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7dbcb6698d6045889d6f0779e4808f61.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7dbcb6698d6045889d6f0779e4808f61.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7dbcb6698d6045889d6f0779e4808f61.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_7dbcb6698d6045889d6f0779e4808f61.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABVSbGgAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAApi0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFQtAABPAAAAAEAAAGAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGAEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
LQAAAAAAAEgAAAACAAUA/CAAAKALAAABAAAAAAAAAJwsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgA6AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACigT
AAAKChIA/hYPAAABbxQAAApvFQAACgIoEAAAChZvFgAACioeAigXAAAKKh4CKBgAAAoqrn4BAAAE
LR5yGQAAcNADAAACKBkAAApvGgAACnMbAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMA
AAQqHgIoHAAACioucwgAAAaAAwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADIAwAAI34AADQEAABkBQAAI1N0cmluZ3MAAAAAmAkAAIwAAAAjVVMAJAoAABAAAAAjR1VJRAAA
ADQKAABsAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAHgAAAAUAAAAGAAAA
CQAAAAEAAAAcAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAfQMB
AAAAAAAGAC0CTQQGALwCTQQGAHkBOgQPAMEEAAAGAKYB+wMGABAC+wMGAPEB+wMGAKMC+wMGAE0C
+wMGAGYC+wMGAL0B+wMGANgB6gIKAIECLAMKAPgALAMGAGEArgMGALUDrgMGAFwBOgQGADQFrgMG
AB0EbQQGAA0E5gMOACwBZwMOAI0BZwMOABQB0QMGAEEBTQQKAFUDLAMSAAMFowASAHYAowAGAMMA
rgMGAH8ArgMGAFoF+wMAAAAAJQAAAAAAAQABAAEAEADGAwEAOQABAAEAAAAQAHQE0ARJAAEAAwAA
ARAADQXQBF0AAwAHAAMBAAAmBQAAQQAEAAoAEQC6A20AEQDoAHEAEQBmAHUABgZNAHkAVoAWBXwA
VoDIAHwAUCAAAAAAhgDMAwYAAQCWIAAAAACGGC0EBgABAJ4gAAAAAIMYLQQGAAEApiAAAAAAkwgZ
BIAAAQDSIAAAAACTCNAAhQABANkgAAAAAJMI3ACKAAEA4SAAAAAAlgg7BZAAAgDoIAAAAACGGC0E
BgACAPAgAAAAAJEYMwSVAAIAAAABAOQCCQAtBAEAEQAtBAYAGQAtBAoAKQAtBBAAMQAtBBAAOQAt
BBAAQQAtBBAASQAtBBAAUQAtBBAAWQAtBBAAYQAtBBAAaQAtBAYAiQAtBAYAsQAtBBUAwQAtBAYA
cQAeBSAAyQD/BCUA0QClAyoAeQBeADAAkQAEAzUA2QDaAjkAyQBHBQEAcQAtBAYAkQAtBAYA4QCR
AD4A4QBWBUUAmQAtBEoAuQAtBAYACAAUAGMACAAYAGgAKQBzANAALgALAKgALgATALEALgAbANAA
LgAjANkALgArAAIBLgAzAAIBLgA7AAIBLgBDANkALgBLAAgBLgBTAAIBLgBbAB8BQwBjAGgASQBz
ANAAYQB7AGgAYwBrAGgAGwADAAEABAADAAAAHQSZAAAA8ACeAAAAPwWjAAIABAADAAIABQAFAAEA
BgAFAAIABwAHAASAAAABAAAAaCRSAAAAAAAAAAEAAAAEAAAAAAAAAAAAAABRAFUAAAAAABAAAAAA
AAAAAAAAAFoADQMAAAAABAAAAAAAAAAAAAAAUQCuAwAAAAAQAAAAAAAAAAAAAABaAC4AAAAAAAAA
AAABAAAAfgQAAAUAAgAAAABTVF83ZGJjYjY2OThkNjA0NTg4OWQ2ZjA3NzllNDgwOGY2MQA8TW9k
dWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBOZXdH
dWlkAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBzZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBN
aWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFz
a3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1Rf
N2RiY2I2Njk4ZDYwNDU4ODlkNmYwNzc5ZTQ4MDhmNjEuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVt
AHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdl
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF83ZGJjYjY2OThkNjA0NTg4OWQ2ZjA3NzllNDgw
OGY2MS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfN2Ri
Y2I2Njk4ZDYwNDU4ODlkNmYwNzc5ZTQ4MDhmNjEuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNl
dHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABz
ZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1ibHkAAAAXVQBzAGUAcgA6ADoAUgB1AG4ASQBkAABxUwBU
AF8ANwBkAGIAYwBiADYANgA5ADgAZAA2ADAANAA1ADgAOAA5AGQANgBmADAANwA3ADkAZQA0ADgA
MAA4AGYANgAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAX2Bd
OHxla0Kkd1ndMonO/wAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERVQQHARE9BCAAEmUEIAASaQUg
ARJtHAQAABE9AyAADgQgAQEcBgABEnERdQQgABJ5BiACAQ4SeQi3elxWGTTgiQiJhF3NgIDMkQQA
AAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAASUQUAAQESUQQAABIQAwAAAQQIABJN
BAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfN2RiY2I2Njk4ZDYwNDU4ODlkNmYwNzc5ZTQ4MDhmNjEAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyNQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAfC0AAAAAAAAA
AAAAli0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgtAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAEBAAAAAAAAAAAAAAEBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAUgBoJAAAAQBSAGgkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEZAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAQAMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwA3AGQAYgBjAGIANgA2ADkAOABkADYAMAA0ADUAOAA4ADkAZAA2AGYAMAA3ADcA
OQBlADQAOAAwADgAZgA2ADEAAAA4AAwAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4AOQAzADIAMAAuADgAMgAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NwBkAGIAYwBiADYANgA5ADgAZAA2ADAANAA1ADgAOAA5AGQANgBmADAANwA3ADkAZQA0ADgAMAA4
AGYANgAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwA3AGQAYgBjAGIANgA2ADkAOABkADYAMAA0ADUAOAA4ADkAZAA2AGYAMAA3ADcAOQBl
ADQAOAAwADgAZgA2ADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8ANwBkAGIAYwBiADYANgA5ADgAZAA2ADAANAA1ADgAOAA5AGQANgBmADAANwA3ADkAZQA0
ADgAMAA4AGYANgAxAAAAPAAMAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA5ADMAMgAwAC4AOAAyAAAAQAAMAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAzADIAMAAuADgAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAqD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{3240D3C7-4CF9-4764-99B5-B9AEF380B4DB}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\For Loop Container"
          DTS:AssignExpression="@PageIndex = @PageIndex + 1"
          DTS:CreationName="STOCK:FORLOOP"
          DTS:Description="For Loop Container"
          DTS:DTSID="{EA7402A6-9072-490A-A6B5-85F5D78A660D}"
          DTS:EvalExpression="@PageIndex == 0 "
          DTS:ExecutableType="STOCK:FORLOOP"
          DTS:InitExpression="@PageIndex = 0"
          DTS:LocaleID="-1"
          DTS:MaxConcurrent="1"
          DTS:ObjectName="For Loop Container">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Execute SQL Task"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{C09D242C-2312-4118-A7B1-E7FBD371EBAE}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Execute SQL Task"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
                  SQLTask:SqlStatementSource="SELECT COUNT(*) AS rc FROM dbo.Staging_Time_Dim;"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="rc"
                    SQLTask:DtsVariableName="User::SuccessRows_Time" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Generate Calendar"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{42F21DEE-C885-4A65-9F3D-AC82B6C3B962}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Generate Calendar"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
                  SQLTask:SqlStatementSource="/* gera datas de 2010-01-01 até hoje */&#xA;DECLARE @d date = '2010-01-01',&#xA;        @run_id nvarchar(50) = ?;     -- parâmetro de entrada (RunId)&#xA;&#xA;WHILE @d &lt;= CAST(GETDATE() AS date)&#xA;BEGIN&#xA;    INSERT INTO dbo.Staging_Time_Dim&#xA;          ([date],[year],[month],[day],is_weekday,&#xA;           DW_row_checksum,DW_run_id,DW_updated_on,DW_source_system)&#xA;    VALUES (@d,&#xA;            YEAR(@d), MONTH(@d), DAY(@d),&#xA;            CASE WHEN DATENAME(weekday,@d) IN ('Saturday','Sunday') THEN 0 ELSE 1 END,&#xA;            CONVERT(nvarchar(64),&#xA;                    HASHBYTES('MD5', CONVERT(varchar(8),@d,112)), 2),&#xA;            @run_id,&#xA;            GETDATE(),&#xA;            N'Generated')&#xA;    SET @d = DATEADD(day,1,@d);&#xA;END&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::RunId"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="0" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Import Coin List"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{69A47EF3-272F-48FF-96F0-0AB181FFB8D5}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Import Coin List">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[Staging_Crypto_Dim]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
                          connectionManagerRefId="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_source_system]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="DW_source_system"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_source_system]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_source_system]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_updated_on]"
                              cachedDataType="dbTimeStamp"
                              cachedName="DW_updated_on"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_updated_on]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_updated_on]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[category]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="category"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[category]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="300"
                              cachedName="name"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[name]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[symbol]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="symbol"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[symbol]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[symbol]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_run_id]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="DW_run_id"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_run_id]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_run_id]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_row_checksum]"
                              cachedDataType="wstr"
                              cachedLength="64"
                              cachedName="DW_row_checksum"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_row_checksum]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_row_checksum]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[symbol]"
                              dataType="wstr"
                              length="50"
                              name="symbol" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                              dataType="wstr"
                              length="200"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category]"
                              dataType="wstr"
                              length="50"
                              name="category" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_row_checksum]"
                              dataType="wstr"
                              length="100"
                              name="DW_row_checksum" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_run_id]"
                              dataType="wstr"
                              length="50"
                              name="DW_run_id" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_updated_on]"
                              dataType="dbTimeStamp"
                              name="DW_updated_on" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_source_system]"
                              dataType="wstr"
                              length="50"
                              name="DW_source_system" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Sequence Container\For Loop Container\Import Coin List\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::SuccessRows_Crypto</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Sequence Container\For Loop Container\Import Coin List\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component"
                      version="13">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ApiBaseUrl
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ApiBaseUrl"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String CoinListEndpoint
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CoinListEndpoint"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String RunId
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["RunId"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Namespaces
using System;
using System.Collections.Generic;
using System.Net;
using Newtonsoft.Json;
using System.Security.Cryptography;
using System.Text;
#endregion

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    // ---------- DTO para o JSON ----------
    private class Coin
    {
        public string id { get; set; }
        public string symbol { get; set; }
        public string name { get; set; }
    }

    // ---------- Helper: corta texto ----------
    private string Clip(string s, int max) =>
        string.IsNullOrEmpty(s) ? string.Empty :
        (s.Length > max ? s.Substring(0, max) : s);

    // ---------- Helper: MD5 ----------
    private string GetMD5(string input)
    {
        using (var md5 = MD5.Create())
        {
            var hash = md5.ComputeHash(Encoding.UTF8.GetBytes(input ?? ""));
            var sb = new StringBuilder(32);
            foreach (byte b in hash)
                sb.Append(b.ToString("X2"));   // 32 chars, maiúsculas
            return sb.ToString();
        }
    }

    // ---------- MAIN ----------
    public override void CreateNewOutputRows()
    {
        // TLS 1.2 para CoinGecko
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

        string url = Variables.ApiBaseUrl + Variables.CoinListEndpoint;   // https://api.coingecko.com/api/v3/coins/list
        string json;

        // Download
        using (var wc = new WebClient())
        {
            wc.Headers.Add("User-Agent", "SSIS-CoinGecko");
            json = wc.DownloadString(url);
        }

        var coins = JsonConvert.DeserializeObject<List<Coin>>(json);

        var symbolSeen = new HashSet<string>(StringComparer.OrdinalIgnoreCase);     

        foreach (var c in coins)
        {
            // IGNORA moedas sem símbolo
            if (string.IsNullOrWhiteSpace(c.symbol))continue;
            if (!symbolSeen.Add(c.symbol)) continue;

            string symbolSafe = Clip(c.symbol, 50);
            string nameSafe = Clip(c.name, 200);

            // ---------- calcular checksum ----------
            string concat = $"{symbolSafe}|{nameSafe}|";
            string checksum = GetMD5(concat);      // 32 caracteres

            // ---------- nova linha ----------
            Output0Buffer.AddRow();

            // campos principais
            Output0Buffer.symbol = symbolSafe;
            Output0Buffer.name = nameSafe;
            Output0Buffer.category_IsNull = true;   // não vem no endpoint

            // metadados / auditoria
            Output0Buffer.DWrunid = Variables.RunId;
            Output0Buffer.DWupdatedon = DateTime.UtcNow;
            Output0Buffer.DWsourcesystem = "CoinGecko";
            Output0Buffer.DWrowchecksum = checksum;
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DWsourcesystem
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DWsourcesystem_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime DWupdatedon
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DWupdatedon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DWrunid
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DWrunid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String category
    {
        set
        {
            this[3] = value;
        }
    }
    public bool category_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String name
    {
        set
        {
            this[4] = value;
        }
    }
    public bool name_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String symbol
    {
        set
        {
            this[5] = value;
        }
    }
    public bool symbol_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DWrowchecksum
    {
        set
        {
            this[6] = value;
        }
    }
    public bool DWrowchecksum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties.Settings.get_Default():SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties.Sett" +
    "ings")]

namespace SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f8669947a7184a4c8e532bf78a4bbf3c.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ED25E560-AF96-4E34-A3C6-07345FE8E4F7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f8669947a7184a4c8e532bf78a4bbf3c</RootNamespace>
    <AssemblyName>SC_f8669947a7184a4c8e532bf78a4bbf3c</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.1.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\filip\OneDrive\Ambiente de Trabalho\net\newtonsoft.json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_f8669947a7184a4c8e532bf78a4bbf3c</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_f8669947a7184a4c8e532bf78a4bbf3c</msb:DisplayName>
    <msb:ProjectId>{15E97883-017F-4C7A-AEA6-B9C6B5D2DAEC}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f8669947a7184a4c8e532bf78a4bbf3c.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f8669947a7184a4c8e532bf78a4bbf3c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f8669947a7184a4c8e532bf78a4bbf3c")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f8669947a7184a4c8e532bf78a4bbf3c.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKdibGgAAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAAikEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADhBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAkCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABs
QQAAAAAAAEgAAAACAAUAhCUAAPwaAAABAAAAAAAAAIBAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIoDKBAAAAotFANvEQAACgQwAgMqAxYEbxIAAAoqfhMAAAoq
ABswBABmAAAAAQAAESgUAAAKCgYoFQAACgMlLQYmcgEAAHBvFgAACm8XAAAKHyBzGAAACgsMFg0r
HAgJkRMEBxIEcgMAAHAoGQAACm8aAAAKJgkXWA0JCI5pMt4HbxsAAAoTBd4KBiwGBm8cAAAK3BEF
KgAAARAAAAIABgBTWQAKAAAAABswBABzAQAAAgAAESAADAAAKB0AAAoCewIAAARvHwAABgJ7AgAA
BG8gAAAGKB4AAAoKcx8AAAoNCW8gAAAKcgkAAHByHwAAcG8hAAAKCQZvIgAACgveCgksBglvHAAA
CtwHKAEAACsoJAAACnMlAAAKDG8mAAAKEwQ45AAAABIEKCcAAAoTBREFbysAAAYoKAAACjrKAAAA
CBEFbysAAAZvKQAACjm4AAAAAhEFbysAAAYfMigBAAAGEwYCEQVvLQAABiDIAAAAKAEAAAYTBxEG
cj0AAHARB3I9AABwKCoAAAoTCAIRCCgCAAAGEwkCewMAAARvFAAABgJ7AwAABBEGbxAAAAYCewMA
AAQRB28OAAAGAnsDAAAEF28NAAAGAnsDAAAEAnsCAAAEbyEAAAZvCgAABgJ7AwAABCgrAAAKbwgA
AAYCewMAAARyQQAAcG8GAAAGAnsDAAAEEQlvEgAABhIEKCwAAAo6EP///94OEgT+FgMAABtvHAAA
CtwqAAEcAAACACwAH0sACgAAAAACAG0A92QBDgAAAAAeAigXAAAGKioCAwQFKC0AAAoqJgIWAygu
AAAKKloDLAgCFigvAAAKKnJVAABwczAAAAp6OgIXA4wZAAABKC4AAAoqWgMsCAIXKC8AAAoqclUA
AHBzMAAACnomAhgDKC4AAAoqWgMsCAIYKC8AAAoqclUAAHBzMAAACnomAhkDKC4AAAoqWgMsCAIZ
KC8AAAoqclUAAHBzMAAACnomAhoDKC4AAAoqWgMsCAIaKC8AAAoqclUAAHBzMAAACnomAhsDKC4A
AAoqWgMsCAIbKC8AAAoqclUAAHBzMAAACnomAhwDKC4AAAoqWgMsCAIcKC8AAAoqclUAAHBzMAAA
CnoeAigxAAAKKh4CKDIAAAoqHgIoMwAACip+Aig0AAAKAgJzHAAABn0BAAAEAgJzHgAABn0CAAAE
KgYqbgJ7AwAABCwSAnsDAAAEbxUAAAYCFH0DAAAEKgAAABMwBQBJAAAAAwAAERYKKy4EBpQOBHLy
AABwKDUAAAozGQIFBpoCBAaUKDYAAAoOBHMFAAAGfQMAAAQGF1gKBgMyzgJvGwAABgJvGAAABgIo
GQAABio6Aig3AAAKAgN9BAAABCqCAnsEAAAEbzgAAApvOQAACnIEAQBwbzoAAApvOwAACio6Aig3
AAAKAgN9BQAABCqWAnsFAAAEbzwAAApyGgEAcG89AAAKKD4AAApvPwAACnQiAAABKpYCewUAAARv
PAAACnIwAQBwbz0AAAooPgAACm8/AAAKdCIAAAEqlgJ7BQAABG88AAAKclIBAHBvPQAACig+AAAK
bz8AAAp0IgAAASoeAig3AAAKKq5+BgAABC0ecl4BAHDQBwAAAihAAAAKb0EAAApzQgAACoAGAAAE
fgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKEMAAAoqLnMnAAAGgAgAAAQqHgJ7CQAABCoi
AgN9CQAABCoeAnsKAAAEKiICA30KAAAEKh4CewsAAAQqIgIDfQsAAAQqAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAABAKAAAjfgAAfAoAAPALAAAjU3RyaW5ncwAAAABsFgAA0AEA
ACNVUwA8GAAAEAAAACNHVUlEAAAATBgAALACAAAjQmxvYgAAAAAAAAACAAABVxWiCQkLAAAA+gEz
ABYAAAEAAAA4AAAACQAAAAsAAAAvAAAAHgAAAEMAAAAZAAAAAwAAAAYAAAAYAAAAHAAAAAMAAAAB
AAAACAAAAAEAAAABAAAAAQAAAAAAVAUBAAAAAAAGACUEBAkGALkEBAkGAHED8QgPAHgJAAAGAJ4D
8wYGAAgE8wYGAOkD8wYGAKAE8wYGAEUE8wYGAF4E8wYGALUD8wYGANAD6wQKAHkEfQIGANAAqAsG
APYHQgsOALwANQESAIQKXgoGAMYANQFLAM8IAAAGAFcKYwYGADkDBAkKACEIfQIWABIIfQIKAJIH
fQIGAHQCYwYKAKwKfQIaAGYAbAgGAFQD8QgGADIIJAkGAIYH3gYSACQDPgUSAIUDPgUSAOcCyQYG
ABYFYwYGAOIEQgsGAH0GqAsGANcEYwYGABcCYwYSAFgIXgoSAJ4CXgoSADkHXgoSAAUHcgEeAPoK
dgcGAL0IYwYGAKgANQEGAFwHYwYiAAEAlAgiACoAlAgiAE0AlAgaAH8AbAgaABoAbAhrAGILAAAa
AJAAbAgGAK4CYwYGACMCYwYGAMkL8wYAAAAA3QAAAAAAAQABAAEAEACpBgAAEAABAAEAAQAQAAQI
AABZAAEABQABABAAjgoAAGkAAQAXAAEAEAADCgAAUQAEABwAAQAQAMIJAABRAAUAHgAAABAAKwmH
CVEABgAiAAABEAD6CYcJhQAIACYAAwAQALQGAABRAAkAKQAGAAMKcAEGAMIJdAEGAAQIeAEBAJwK
fAEBAJwKfAERAJ0GgAERANcChAERAAcCiAEBAKsBKgABANUBKgABAL8BKgBQIAAAAACBAPEHjAEB
AHQgAAAAAIEAzQBRAAMA+CAAAAAAxgAxCgYABACUIgAAAACGGNoIBgAEAJwiAAAAAIYY2gjrAAQA
pyIAAAAAhghqBhAABwCxIgAAAACGCLEFkgEIAMgiAAAAAIYIuQaXAQkA1yIAAAAAhgjkBZIBCgDu
IgAAAACGCJ8BEAALAPgiAAAAAIYIfAWSAQwADyMAAAAAhgjSCxAADQAZIwAAAACGCPsFkgEOADAj
AAAAAIYIawIQAA8AOiMAAAAAhgiPBZIBEABRIwAAAACGCCIGEAARAFsjAAAAAIYInwWSARIAciMA
AAAAhgiLBhAAEwB8IwAAAACGCMsFkgEUAJMjAAAAAIYAnQsGABUAmyMAAAAAhgBpCgYAFQCjIwAA
AACGAGwK5wAVAKsjAAAAAIYY2ggGABUAyyMAAAAAxgEjCgYAFQDNIwAAAACBAF4BBgAVAOwjAAAA
AMYALQudARUAyyMAAAAAxgExCgYAGQBBJAAAAACGGNoIqQEZAFAkAAAAAIYITQcfARoAcSQAAAAA
hhjaCKkBGgCAJAAAAACGCEIGXAAbAKYkAAAAAIYIyApcABsAzCQAAAAAhghQAVwAGwDyJAAAAACD
GNoIBgAbAPokAAAAAJMILgivARsAJiUAAAAAkwi/ArQBGwAtJQAAAACTCMsCuQEbADUlAAAAAJYI
eAq/ARwAPCUAAAAAhhjaCAYAHABEJQAAAACRGOAIxAEcAFAlAAAAAIYIkQFcABwAWCUAAAAAhgiY
ARAAHABhJQAAAACGCBcGXAAdAGklAAAAAIYIIgYQAB0AciUAAAAAhghiAlwAHgB6JQAAAACGCGsC
EAAeAPIkAAAAAIYY2ggGAB8AAAABAEMKAAACAKQLAAABACcLAAABACcIAAACANUJAAADAKAHAAAB
ANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwE
AAABANwEAAABANwEAAABANwEAAABANwEAAABACkKAAACAOcIAAADABsKAAAEAKAHAAABALIKAAAB
ALIKAAABANwEAAABANwEAAABANwEAAABANwECQDaCAEAEQDaCAYAGQDaCAoAKQDaCBAAMQDaCBAA
OQDaCBAAQQDaCBAASQDaCBAAUQDaCBAAWQDaCBAAYQDaCBAAaQDaCAYAqQDaCAYA4QDaCAYAAQHa
CBUAEQHfCxsAEQEzBSAAEQEdBSQAEQHnCyoAcQAdAzkAGQHUAD4AGQHMCUQAIQEnBUoAeQDaCAEA
KQEUBVEAeQDtAVYAoQAUBVwAMQEVAwYAOQEtBngAEQFFCn8AiQDaCAYAiQAPCoUAUQFaAYsAiQAF
BVEAWQFMCpEAYQH/AqEADADaCK0AFADMCL8AHAC8Cs8AEQH0ARsADABaAdQAEQFFCtoAyQCSC+IA
HAA5C+cAsQDaCOsAsQBaBvUAsQAPBgEAcQHaCBAAsQCdCwYAsQBpCgYAsQBsCucA0QDaCAYA0QDm
AP8A0QDpCQYBoQDaCAYA0QDyAAwBeQEZBxIBgQFHAhgBiQFCCB8B0QC2CSQBkQFRBioB0QB9CzEB
mQFOCzcBsQE1Aj4BsQHFC0cB6QDaCE0BCQHaCAYALgALAOkBLgATAPIBLgAbABECLgAjABoCLgAr
AEMCLgAzAEMCLgA7AEMCLgBDABoCLgBLAEkCLgBTAEMCLgBbAGACQwBjAKoC4wBzAKoCAQFrAKoC
IQFrAKoCQQFrAKoCYQFrAKoCaQJ7ABECiQJ7ABECIAVrAKoCQAVrAKoCYAVrAKoCgAVrAKoCoAVr
AKoCwAVrAKoCLQBgAPsAAwABAAUADwAGABAABwATAAgAFQAJABYAAABuBsgBAAC1BcwBAAC9BtAB
AADoBcwBAACjAcgBAACABcwBAADWC8gBAAD/BcwBAABvAsgBAACTBcwBAAAmBsgBAACjBcwBAACP
BsgBAADPBcwBAABRB9UBAABGBsgBAADMCsgBAABUAcgBAAAyCNoBAADfAt8BAAB8CuQBAACoAcgB
AAAmBsgBAABvAsgBAQAGAAMAAQAHAAUAAQAIAAcAAQAJAAkAAQAKAAsAAQALAA0AAQAMAA8AAQAN
ABEAAQAOABMAAQAPABUAAQAQABcAAQARABkAAQASABsAAQATAB0AAgAdAB8AAgAfACEAAgAgACMA
AgAhACUAAgAjACcAAgAkACkAAQAlACkAAgAmACsAAgApAC0AAQAqAC0AAgArAC8AAQAsAC8AAgAt
ADEAAQAuADEApwC4AMgABIAAAAEAAAAAAAAAAAAAAAAAEQEAAAQAAAAAAAAAAAAAAFUBCAEAAAAA
EAAAAAAAAAAAAAAAXgHdCgAAAAAEAAAAAAAAAAAAAABVAbMCAAAAAAQAAAAAAAAAAAAAAFUBYwYA
AAAAEAAAAAAAAAAAAAAAXgEGCwAAAAAQAAAAAAAAAAAAAABeAaoHAAAAAA0AAAAAAAAAAAAAAGcB
dgcAAAAAEAAAAAAAAAAAAAAAXgHNBwAAAAAAAAAAAQAAADUJAAAJAAIARwCYAAAAAElEVFNDb21w
b25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29s
bGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2Vy
MTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAASUVxdWFsaXR5Q29t
cGFyZXJgMQBIYXNoU2V0YDEATGlzdGAxAEdldE1ENQBnZXRfVVRGOAA8TW9kdWxlPgBHZXRPdXRw
dXRJRABnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAU0NfZjg2Njk5NDdhNzE4NGE0Yzhl
NTMyYmY3OGE0YmJmM2MAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZ2V0X1J1bklkAEFkZABN
YXJrT3V0cHV0c0ZpbmlzaGVkAFN5c3RlbS5Db2xsZWN0aW9ucy5TcGVjaWFsaXplZABnZXRfaWQA
c2V0X2lkAHNldF9EV3J1bmlkADxpZD5rX19CYWNraW5nRmllbGQAPG5hbWU+a19fQmFja2luZ0Zp
ZWxkADxzeW1ib2w+a19fQmFja2luZ0ZpZWxkAEFwcGVuZABJc051bGxPcldoaXRlU3BhY2UAZGVm
YXVsdEluc3RhbmNlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdldF9uYW1lAHNldF9uYW1lAERhdGVUaW1l
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNlY3VyaXR5UHJvdG9jb2xUeXBlAFN5
c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBnZXRfT3JkaW5hbElnbm9yZUNhc2UARGlzcG9zZQBDcmVhdGUARWRp
dG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAQnl0ZQB2YWx1ZQBFbmNvZGluZwBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAERvd25sb2FkU3RyaW5nAFRvU3RyaW5nAFN1YnN0cmluZwBD
b21wdXRlSGFzaABnZXRfTGVuZ3RoAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19mODY2OTk0N2E3
MTg0YTRjOGU1MzJiZjc4YTRiYmYzYy5kbGwAc2V0X0RXcnVuaWRfSXNOdWxsAHNldF9uYW1lX0lz
TnVsbABzZXRfc3ltYm9sX0lzTnVsbABzZXRfRFdzb3VyY2VzeXN0ZW1fSXNOdWxsAHNldF9EV3Jv
d2NoZWNrc3VtX0lzTnVsbABzZXRfRFd1cGRhdGVkb25fSXNOdWxsAHNldF9jYXRlZ29yeV9Jc051
bGwAU2V0TnVsbABnZXRfc3ltYm9sAHNldF9zeW1ib2wAc2V0X1NlY3VyaXR5UHJvdG9jb2wAZ2V0
X0FwaUJhc2VVcmwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHNldF9EV3NvdXJjZXN5c3RlbQBI
YXNoQWxnb3JpdGhtAHNldF9EV3Jvd2NoZWNrc3VtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AQ29p
bgBzZXRfRFd1cGRhdGVkb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRp
b24AU3lzdGVtLlJlZmxlY3Rpb24ATmFtZVZhbHVlQ29sbGVjdGlvbgBnZXRfUnVudGltZUNvbm5l
Y3Rpb25Db2xsZWN0aW9uAFdlYkhlYWRlckNvbGxlY3Rpb24AZ2V0X0Nvbm5lY3Rpb24ASW52YWxp
ZE9wZXJhdGlvbkV4Y2VwdGlvbgBOZXd0b25zb2Z0Lkpzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFt
ZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABDbGlwAFN0cmluZ0J1aWxkZXIAT3V0cHV0MEJ1
ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRf
Q29ubmVjdGlvbk1hbmFnZXIAU2VydmljZVBvaW50TWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3Jh
cHBlcgBTdHJpbmdDb21wYXJlcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTQ19mODY2OTk0N2E3MTg0YTRjOGU1MzJiZjc4YTRiYmYzYy5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZjg2Njk5NDdhNzE4NGE0Yzhl
NTMyYmY3OGE0YmJmM2MuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAR2V0Qnl0ZXMA
QnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAENvbm5lY3Rpb25z
AGdldF9IZWFkZXJzAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENv
bmNhdABEZXNlcmlhbGl6ZU9iamVjdABTeXN0ZW0uTmV0AFNldEVuZE9mUm93c2V0AGdldF9EZWZh
dWx0AFdlYkNsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25l
bnQAZ2V0X0N1cnJlbnQAZ2V0X0NvaW5MaXN0RW5kcG9pbnQATWljcm9zb2Z0LlNxbFNlcnZlci5U
eFNjcmlwdABKc29uQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABpbnB1
dABQcmltZU91dHB1dABNb3ZlTmV4dABTeXN0ZW0uVGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNj
cmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AGdldF9VdGNOb3cA
QWRkUm93AG1heABTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5AGdldF9Bc3NlbWJseQBzZXRf
Y2F0ZWdvcnkASXNOdWxsT3JFbXB0eQAAAAAAAQAFWAAyAAAVVQBzAGUAcgAtAEEAZwBlAG4AdAAB
HVMAUwBJAFMALQBDAG8AaQBuAEcAZQBjAGsAbwABA3wAABNDAG8AaQBuAEcAZQBjAGsAbwAAgJtJ
AHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQA
IAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAg
AHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAA
ABVDAG8AbgBuAGUAYwB0AGkAbwBuAAAVQQBwAGkAQgBhAHMAZQBVAHIAbAAAIUMAbwBpAG4ATABp
AHMAdABFAG4AZABwAG8AaQBuAHQAAAtSAHUAbgBJAGQAAHFTAEMAXwBmADgANgA2ADkAOQA0ADcA
YQA3ADEAOAA0AGEANABjADgAZQA1ADMAMgBiAGYANwA4AGEANABiAGIAZgAzAGMALgBQAHIAbwBw
AGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAFQVOHQI7A5Hs11+9Hq7N2YABCABAQgD
IAABBSABARERBCABAQ4FIAEBEX0EAAECDgMgAAgFIAIOCAgCBg4LBwYSORI9HQUIBQ4EAAASOQUA
ABKAjQUgAR0FDgYgAR0FHQUEIAEODgUgARI9DgMgAA4XBwoODhUSQQEOEkUVEU0BEiQSJA4ODg4G
AAEBEYChBQACDg4OBSAAEoClBSACAQ4OBhABAR4ADggKARUSSQESJAUAABKAsQUVEkEBDgogAQEV
EoC1ARMABhUSSQESJAggABURTQETAAYVEU0BEiQEIAATAAUgAQITAAcABA4ODg4OBAAAEWUDIAAC
CSADARJdHQgSYQUgAgEIHAMHAQgGAAIIEmEOBSABHQgIBSAAEoC9BSAAEoDBBiABEoDFDgQgABJt
BSAAEoDJBiABEoDNHAUAABKA0QYgARwSgNUIAAESgNkRgN0FIAASgOEHIAIBDhKA4Qi3elxWGTTg
iQiJhF3NgIDMkQgwrU/msqau7QMGEhQDBhIYAwYSDAMGEmkDBhJ1AwYSeQMGEiAFIAIODggEIAEB
AgUgAQERZQsgBAEIHQgdEl0SYQUgAQESaQQAABJ1BAAAEnkFAAEBEnkEAAASIAMAAAEDKAAOAygA
AgQoABFlBCgAEm0ECAASdQQIABJ5BAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2Y4NjY5OTQ3YTcxODRhNGM4ZTUzMmJmNzhhNGJiZjNj
AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAAGBBAAAAAAAAAAAAAHpBAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsQQAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
AGYAOAA2ADYAOQA5ADQANwBhADcAMQA4ADQAYQA0AGMAOABlADUAMwAyAGIAZgA3ADgAYQA0AGIA
YgBmADMAYwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZgA4ADYANgA5ADkANAA3AGEA
NwAxADgANABhADQAYwA4AGUANQAzADIAYgBmADcAOABhADQAYgBiAGYAMwBjAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBmADgANgA2ADkA
OQA0ADcAYQA3ADEAOAA0AGEANABjADgAZQA1ADMAMgBiAGYANwA4AGEANABiAGIAZgAzAGMALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZgA4ADYANgA5ADkA
NAA3AGEANwAxADgANABhADQAYwA4AGUANQAzADIAYgBmADcAOABhADQAYgBiAGYAMwBjAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACMMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_f8669947a7184a4c8e532bf78a4bbf3c</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ApiBaseUrl,User::CoinListEndpoint,User::RunId</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">EC</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
                          connectionManagerRefId="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
                          name="Connection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_source_system]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_source_system]"
                              name="DW_source_system" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_updated_on]"
                              dataType="dbTimeStamp"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_updated_on]"
                              name="DW_updated_on" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_run_id]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_run_id]"
                              name="DW_run_id" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[category]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[category]"
                              name="category" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[name]"
                              dataType="wstr"
                              length="300"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[name]"
                              name="name" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[symbol]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[symbol]"
                              name="symbol" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_row_checksum]"
                              dataType="wstr"
                              length="64"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_row_checksum]"
                              name="DW_row_checksum" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Sequence Container\For Loop Container\Import Coin List.Paths[Output 0]"
                      endId="Package\Sequence Container\For Loop Container\Import Coin List\Row Count.Inputs[Row Count Input 1]"
                      name="Output 0"
                      startId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0]" />
                    <path
                      refId="Package\Sequence Container\For Loop Container\Import Coin List.Paths[Row Count Output 1]"
                      endId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Row Count Output 1"
                      startId="Package\Sequence Container\For Loop Container\Import Coin List\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Import Exchanges"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{0300B449-407B-4EB8-A164-E40C8D47B566}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Import Exchanges"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[Staging_Exchange_Dim]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
                          connectionManagerRefId="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_row_checksum]"
                              cachedDataType="wstr"
                              cachedLength="64"
                              cachedName="DW_row_checksum"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_row_checksum]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[DW_row_checksum]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_source_system]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="DW_source_system"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_source_system]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[DW_source_system]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_updated_on]"
                              cachedDataType="dbTimeStamp"
                              cachedName="DW_updated_on"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_updated_on]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[DW_updated_on]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_run_id]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="DW_run_id"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_run_id]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[DW_run_id]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[type]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="type"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[type]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[country]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="country"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[country]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="200"
                              cachedName="name"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[name]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[exchange_code]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="exchange_code"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[exchange_code]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[exchange_code]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[exchange_code]"
                              dataType="wstr"
                              length="50"
                              name="exchange_code" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                              dataType="wstr"
                              length="200"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                              dataType="wstr"
                              length="50"
                              name="country" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                              dataType="wstr"
                              length="50"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_row_checksum]"
                              dataType="wstr"
                              length="100"
                              name="DW_row_checksum" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_run_id]"
                              dataType="wstr"
                              length="50"
                              name="DW_run_id" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_updated_on]"
                              dataType="dbTimeStamp"
                              name="DW_updated_on" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_source_system]"
                              dataType="wstr"
                              length="50"
                              name="DW_source_system" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Sequence Container\For Loop Container\Import Exchanges\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::SuccessRows_Exchange</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Sequence Container\For Loop Container\Import Exchanges\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Sequence Container\For Loop Container\Import Exchanges\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Sequence Container\For Loop Container\Import Exchanges\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component"
                      version="13">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ApiBaseUrl
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ApiBaseUrl"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ExchangeListEndpoint
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ExchangeListEndpoint"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String RunId
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["RunId"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Namespaces
using System;
using System.Collections.Generic;
using System.Net;
using Newtonsoft.Json;
using System.Security.Cryptography;
using System.Text;
#endregion

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPoint]
public class ScriptMain : UserComponent
{
    private class Exchange
    {
        public string id { get; set; }     // �binance�
        public string name { get; set; }   // �Binance�
    }

    private string Clip(string s, int max) =>
        string.IsNullOrEmpty(s) ? string.Empty :
        s.Length > max ? s.Substring(0, max) : s;

    private string Md5(string concat)
    {
        using (var md5 = MD5.Create()) { 
            byte[] hash = md5.ComputeHash(Encoding.UTF8.GetBytes(concat));
        return BitConverter.ToString(hash).Replace("-", "");
        }
    }

    public override void CreateNewOutputRows()
    {
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

        string url = Variables.ApiBaseUrl + Variables.ExchangeListEndpoint;   // https://api.coingecko.com/api/v3/exchanges/list
        string json = new WebClient().DownloadString(url);

        var exchanges = JsonConvert.DeserializeObject<List<Exchange>>(json);

        foreach (var ex in exchanges)
        {
            if (string.IsNullOrWhiteSpace(ex.id)) continue;   // seguran�a

            Output0Buffer.AddRow();

            Output0Buffer.exchangecode = Clip(ex.id, 50);
            Output0Buffer.name = Clip(ex.name, 200);

            Output0Buffer.country_IsNull = true;
            Output0Buffer.type_IsNull = true;

            Output0Buffer.DWrunid = Variables.RunId;
            Output0Buffer.DWupdatedon = DateTime.UtcNow;
            Output0Buffer.DWsourcesystem = "CoinGecko";

            string concat = $"{ex.id}{ex.name}";
            Output0Buffer.DWrowchecksum = Md5(concat);
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_614c88b33eb04b898cb575d5685f074c.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E1585DA6-DCF3-4A79-8BC7-3E180394BEF6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_614c88b33eb04b898cb575d5685f074c</RootNamespace>
    <AssemblyName>SC_614c88b33eb04b898cb575d5685f074c</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.1.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\filip\OneDrive\Ambiente de Trabalho\net\newtonsoft.json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_614c88b33eb04b898cb575d5685f074c.Properties.Settings.get_Default():SC_614c88b33eb04b898cb575d5685f074c.Properties.Sett" +
    "ings")]

namespace SC_614c88b33eb04b898cb575d5685f074c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DWrowchecksum
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DWrowchecksum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DWsourcesystem
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DWsourcesystem_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime DWupdatedon
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DWupdatedon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DWrunid
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DWrunid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String type
    {
        set
        {
            this[4] = value;
        }
    }
    public bool type_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String country
    {
        set
        {
            this[5] = value;
        }
    }
    public bool country_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String name
    {
        set
        {
            this[6] = value;
        }
    }
    public bool name_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String exchangecode
    {
        set
        {
            this[7] = value;
        }
    }
    public bool exchangecode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_614c88b33eb04b898cb575d5685f074c</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_614c88b33eb04b898cb575d5685f074c</msb:DisplayName>
    <msb:ProjectId>{895FA5BE-9DBE-4E7F-A4BF-B2DA2CCC6DCE}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_614c88b33eb04b898cb575d5685f074c.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_614c88b33eb04b898cb575d5685f074c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_614c88b33eb04b898cb575d5685f074c")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_614c88b33eb04b898cb575d5685f074c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_614c88b33eb04b898cb575d5685f074c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_614c88b33eb04b898cb575d5685f074c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_614c88b33eb04b898cb575d5685f074c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_614c88b33eb04b898cb575d5685f074c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_614c88b33eb04b898cb575d5685f074c.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANkibWgAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAAqj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFg9AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAsB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACM
PQAAAAAAAEgAAAACAAUA8CQAALAXAAABAAAAAAAAAKA8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIoDKBAAAAotFANvEQAACgQwAgMqAxYEbxIAAAoqfhMAAAoq
ABswAwA6AAAAAQAAESgUAAAKCgYoFQAACgNvFgAACm8XAAAKKBgAAApyAQAAcHIFAABwbxkAAAoL
3goGLAYGbxoAAArcByoAAAEQAAACAAYAKC4ACgAAAAAbMAQAKAEAAAIAABEgAAwAACgbAAAKAnsC
AAAEbyAAAAYCewIAAARvIQAABigcAAAKCnMdAAAKBigeAAAKKAEAACtvIAAACgs4ygAAABIBKCEA
AAoMCG8qAAAGKCIAAAo6sgAAAAJ7AwAABG8WAAAGAnsDAAAEAghvKgAABh8yKAEAAAZvFAAABgJ7
AwAABAIIbywAAAYgyAAAACgBAAAGbxIAAAYCewMAAAQXbxEAAAYCewMAAAQXbw8AAAYCewMAAAQC
ewIAAARvIgAABm8MAAAGAnsDAAAEKCMAAApvCgAABgJ7AwAABHIHAABwbwgAAAYIbyoAAAYIbywA
AAYoHAAACg0CewMAAAQCCSgCAAAGbwYAAAYSASgkAAAKOir////eDhIB/hYCAAAbbxoAAArcKgEQ
AAACADwA3RkBDgAAAAAeAigZAAAGKioCAwQFKCUAAAoqJgIWAygmAAAKKloDLAgCFignAAAKKnIb
AABwcygAAAp6JgIXAygmAAAKKloDLAgCFygnAAAKKnIbAABwcygAAAp6OgIYA4wWAAABKCYAAAoq
WgMsCAIYKCcAAAoqchsAAHBzKAAACnomAhkDKCYAAAoqWgMsCAIZKCcAAAoqchsAAHBzKAAACnom
AhoDKCYAAAoqWgMsCAIaKCcAAAoqchsAAHBzKAAACnomAhsDKCYAAAoqWgMsCAIbKCcAAAoqchsA
AHBzKAAACnomAhwDKCYAAAoqWgMsCAIcKCcAAAoqchsAAHBzKAAACnomAh0DKCYAAAoqWgMsCAId
KCcAAAoqchsAAHBzKAAACnoeAigpAAAKKh4CKCoAAAoqHgIoKwAACip+AigsAAAKAgJzHgAABn0B
AAAEAgJzHwAABn0CAAAEKgYqbgJ7AwAABCwSAnsDAAAEbxcAAAYCFH0DAAAEKgAAEzAFAEkAAAAD
AAARFgorLgQGlA4EcrgAAHAoLQAACjMZAgUGmgIEBpQoLgAACg4EcwUAAAZ9AwAABAYXWAoGAzLO
Am8dAAAGAm8aAAAGAigbAAAGKjoCKC8AAAoCA30EAAAEKjoCKC8AAAoCA30FAAAEKpYCewUAAARv
MAAACnLKAABwbzEAAAooMgAACm8zAAAKdB4AAAEqlgJ7BQAABG8wAAAKcuAAAHBvMQAACigyAAAK
bzMAAAp0HgAAASqWAnsFAAAEbzAAAApyCgEAcG8xAAAKKDIAAApvMwAACnQeAAABKh4CKC8AAAoq
rn4GAAAELR5yFgEAcNAHAAACKDQAAApvNQAACnM2AAAKgAYAAAR+BgAABCoafgcAAAQqHgKABwAA
BCoafggAAAQqHgIoNwAACioucygAAAaACAAABCoeAnsJAAAEKiICA30JAAAEKh4CewoAAAQqIgID
fQoAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAOAkAACN+AACkCQAA
HAoAACNTdHJpbmdzAAAAAMATAACIAQAAI1VTAEgVAAAQAAAAI0dVSUQAAABYFQAAWAIAACNCbG9i
AAAAAAAAAAIAAAFXFaIJCQsAAAD6ATMAFgAAAQAAAC4AAAAJAAAACgAAAC4AAAAfAAAANwAAABYA
AAADAAAABQAAABgAAAAbAAAAAgAAAAEAAAAGAAAAAQAAAAEAAAABAAAAAABaBAEAAAAAAAYAMAM6
BwYAxAM6BwYAfAInBw8ArgcAAAYAqQLzBQYAEwPzBQYA9ALzBQYAqwPzBQYAUAPzBQYAaQPzBQYA
wALzBQYA2wLxAwoAhAOhAQYAQQDXCQYAOgCUAD8ABQcAAAYAiAhoBQYARAI6BwoAmAahAQ4AiQah
AQoAOwahAQYAmAFoBQoA3QihAQYAXwInBwYAqQZaBwYALwbeBRIALwJEBBIAkAJEBBIACALJBQYA
HARoBQYA6ANxCQYAggXXCQYA9QZoBQYAVgFoBRIAuQaPCBIAwgGPCBIAtQiPCBYALwkfBgYABQZo
BRoAEQDNBhoAAQDNBl8AkQkAABoAIgDNBgYA0gFoBQYAYgFoBQYA+AnzBQAAAABSAAAAAAABAAEA
AQAQAK4FAAAQAAEAAQABABAAewYAAE0AAQAFAAEAEAC/CAAAXQABABkAAQAQADkIAABFAAQAHgAB
ABAA+AcAAEUABQAfAAAAEABhB70HRQAGACMAAAEQADAIvQd1AAgAJwADABAATQEAAEUACQAqAAYA
OQgXAQYA+AcbAQYAewYfAQEAzQgjAQEAzQgjAREAogUnAREA+AErAREALAEvAQEA5wAqAAEA+wAq
AFAgAAAAAIEAdgYzAQEAdCAAAAAAgQBFAHAAAwDMIAAAAADGAFsIBgAEABAiAAAAAIYYEAcGAAQA
GCIAAAAAhhgQB6oABAAjIgAAAACGCJAFEAAHAC0iAAAAAIYI5wQ5AQgARCIAAAAAhghvBRAACQBO
IgAAAACGCM0EOQEKAGUiAAAAAIYIuQU+AQsAdCIAAAAAhggABTkBDACLIgAAAACGCNsAEAANAJUi
AAAAAIYIggQ5AQ4ArCIAAAAAhgjXARAADwC2IgAAAACGCL0EOQEQAM0iAAAAAIYIAQoQABEA1yIA
AAAAhggXBTkBEgDuIgAAAACGCI8BEAATAPgiAAAAAIYIrQQ5ARQADyMAAAAAhgg8ARAAFQAZIwAA
AACGCJUEOQEWADAjAAAAAIYAzAkGABcAOCMAAAAAhgCaCAYAFwBAIwAAAACGAJ0IpgAXAEgjAAAA
AIYYEAcGABcAaCMAAAAAxgFNCAYAFwBqIwAAAACBALkABgAXAIgjAAAAAMYAXAlEARcAaCMAAAAA
xgFbCAYAGwDdIwAAAACGGBAHUAEbAOwjAAAAAIYYEAdQARwA+yMAAAAAhghHBVYBHQAhJAAAAACG
CPkIVgEdAEckAAAAAIYIrwBWAR0AbSQAAAAAgxgQBwYAHQB1JAAAAACTCKUGWgEdAKEkAAAAAJMI
4AFfAR0AqCQAAAAAkwjsAWQBHQCwJAAAAACWCKkIagEeALckAAAAAIYYEAcGAB4AvyQAAAAAkRgW
B28BHgDLJAAAAACGCM0AVgEeANMkAAAAAIYI1AAQAB4A3CQAAAAAhgiGAVYBHwDkJAAAAACGCI8B
EAAfAG0kAAAAAIYYEAcGACAAAAABAG0IAAACANMJAAABAHYIAAABAJ4GAAACAAsIAAADAEkGAAAB
AOIDAAABAOIDAAABAOIDAAABAOIDAAABAOIDAAABAOIDAAABAOIDAAABAOIDAAABAOIDAAABAOID
AAABAOIDAAABAOIDAAABAOIDAAABAOIDAAABAOIDAAABAOIDAAABAFMIAAACAB0HAAADAEUIAAAE
AEkGAAABAOMIAAABAOMIAAABAOIDAAABAOIDAAABAOIDCQAQBwEAEQAQBwYAGQAQBwoAKQAQBxAA
MQAQBxAAOQAQBxAAQQAQBxAASQAQBxAAUQAQBxAAWQAQBxAAYQAQBxAAaQAQBwYAkQAQBwYAwQAQ
BwYA4QAQBxUA8QANChsA8QA5BCAA8QAjBCQA8QAVCioAcQAoAjMA+QBJADgA+QACCD0AAQEtBEMA
CQEaBEoA8QARAVAAEQEgAgYAGQEyBWMA8QBvCGoAKQEQBwYAKQELBHAAMQF9CHUADAACB4wAFADt
CJwA8QAZARsAsQDBCaEAFABoCaYAmQAQB6oAmQBfBbQAmQAqBQEAOQEQBxAAmQDMCQYAmQCaCAYA
mQCdCKYAuQAQBwYAuQBbAL4AuQAfCMUAiQAQBwYAuQDsB8sAQQFWBdEAuQCsCdgASQF9Cd4AYQF0
AeUAYQH0Ce4AyQAQB/QA6QAQBwYALgALAI8BLgATAJgBLgAbALcBLgAjAMABLgArAOkBLgAzAOkB
LgA7AOkBLgBDAMABLgBLAO8BLgBTAOkBLgBbAAYCQwBjAFAC4wBzAFACAQFrAFACIQFrAFACQQFr
AFACiQJ7ALcBqQJ7ALcBQAVrAFACYAVrAFACgAVrAFACoAVrAFACLQBWALoAAwABAAYAEQAHABQA
CAAWAAkAFwAAAJQFcwEAAOsEdwEAAHMFcwEAANEEdwEAAL0FewEAAAQFdwEAAN8AcwEAAIYEdwEA
ANsBcwEAAMEEdwEAAAUKcwEAABsFdwEAAJMBcwEAALEEdwEAAEABcwEAAJkEdwEAAEsFcwEAAP0I
cwEAALMAcwEAAKkGgAEAAAAChQEAAK0IigEAAOQAcwEAAJMBcwEBAAYAAwABAAcABQABAAgABwAB
AAkACQABAAoACwABAAsADQABAAwADwABAA0AEQABAA4AEwABAA8AFQABABAAFwABABEAGQABABIA
GwABABMAHQABABQAHwABABUAIQACACAAIwACACEAJQACACIAJwACACQAKQACACUAKwABACYAKwAC
ACcALQACACoALwABACsALwACACwAMQABAC0AMQCFAJUABIAAAAEAAAAAAAAAAAAAAAAAcAAAAAQA
AAAAAAAAAAAAAPwAZwAAAAAAEAAAAAAAAAAAAAAABQESCQAAAAAQAAAAAAAAAAAAAAAFATsJAAAA
AAQAAAAAAAAAAAAAAPwAaAUAAAAADQAAAAAAAAAAAAAADgEfBgAAAAAQAAAAAAAAAAAAAAAFAVMG
AAAAAAAAAAABAAAAawcAAAkAAgA/AHwAAAAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMx
MDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAATGlzdGAxAE1ENQBNZDUAZ2V0X1VURjgAPE1vZHVs
ZT4AR2V0T3V0cHV0SUQAbXNjb3JsaWIAU0NfNjE0Yzg4YjMzZWIwNGI4OThjYjU3NWQ1Njg1ZjA3
NGMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZ2V0X1J1bklkAE1hcmtPdXRwdXRzRmluaXNo
ZWQAZ2V0X2lkAHNldF9pZABzZXRfRFdydW5pZAA8aWQ+a19fQmFja2luZ0ZpZWxkADxuYW1lPmtf
X0JhY2tpbmdGaWVsZABSZXBsYWNlAElzTnVsbE9yV2hpdGVTcGFjZQBkZWZhdWx0SW5zdGFuY2UA
c2V0X2V4Y2hhbmdlY29kZQBFeGNoYW5nZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBnZXRfbmFtZQBzZXRfbmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5QaXBlbGluZQBTZWN1cml0eVByb3RvY29sVHlwZQBzZXRfdHlwZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RGlzcG9zZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAdmFsdWUA
RW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBEb3dubG9hZFN0cmluZwBUb1N0cmlu
ZwBTdWJzdHJpbmcAQ29tcHV0ZUhhc2gAZ2V0X0xlbmd0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
U0NfNjE0Yzg4YjMzZWIwNGI4OThjYjU3NWQ1Njg1ZjA3NGMuZGxsAHNldF9EV3J1bmlkX0lzTnVs
bABzZXRfZXhjaGFuZ2Vjb2RlX0lzTnVsbABzZXRfbmFtZV9Jc051bGwAc2V0X3R5cGVfSXNOdWxs
AHNldF9EV3NvdXJjZXN5c3RlbV9Jc051bGwAc2V0X0RXcm93Y2hlY2tzdW1fSXNOdWxsAHNldF9E
V3VwZGF0ZWRvbl9Jc051bGwAc2V0X2NvdW50cnlfSXNOdWxsAFNldE51bGwAc2V0X1NlY3VyaXR5
UHJvdG9jb2wAZ2V0X0FwaUJhc2VVcmwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHNldF9EV3Nv
dXJjZXN5c3RlbQBIYXNoQWxnb3JpdGhtAHNldF9EV3Jvd2NoZWNrc3VtAHJlc291cmNlTWFuAFNj
cmlwdE1haW4Ac2V0X0RXdXBkYXRlZG9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ATmV3
dG9uc29mdC5Kc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAAQ2xpcABPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVm
ZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFNlcnZpY2VQb2ludE1hbmFnZXIA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAEJpdENvbnZlcnRlcgBHZXRF
bnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ182MTRjODhiMzNl
YjA0Yjg5OGNiNTc1ZDU2ODVmMDc0Yy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU0NfNjE0Yzg4YjMzZWIwNGI4OThjYjU3NWQ1Njg1ZjA3NGMuUHJvcGVydGll
cwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAR2V0Qnl0ZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRD
b2x1bW5JbmRleGVzAFNldHRpbmdzAENvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBD
cmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABjb25jYXQARGVzZXJpYWxpemVPYmplY3QAU3lzdGVt
Lk5ldABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVsdABXZWJDbGllbnQAVXNlckNvbXBvbmVudABQ
YXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50AGdldF9FeGNoYW5nZUxp
c3RFbmRwb2ludABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AEpzb25Db252ZXJ0AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AE1vdmVOZXh0AFN5c3RlbS5U
ZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2
YWx1YXRvckNvbnRleHQAZ2V0X1V0Y05vdwBBZGRSb3cAbWF4AFN5c3RlbS5TZWN1cml0eS5Dcnlw
dG9ncmFwaHkAZ2V0X0Fzc2VtYmx5AHNldF9jb3VudHJ5AElzTnVsbE9yRW1wdHkAAAADLQABAQAT
QwBvAGkAbgBHAGUAYwBrAG8AAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEA
bgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAg
AGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEA
ZAAuAAARTwB1AHQAcAB1AHQAIAAwAAAVQQBwAGkAQgBhAHMAZQBVAHIAbAAAKUUAeABjAGgAYQBu
AGcAZQBMAGkAcwB0AEUAbgBkAHAAbwBpAG4AdAAAC1IAdQBuAEkAZAAAcVMAQwBfADYAMQA0AGMA
OAA4AGIAMwAzAGUAYgAwADQAYgA4ADkAOABjAGIANQA3ADUAZAA1ADYAOAA1AGYAMAA3ADQAYwAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAZ9DRkuo+g0ScvFX8Qy8A
RQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERbQQAAQIOAyAACAUgAg4ICAIGDgUHAhI5DgQAABI5
BAAAEn0FIAEdBQ4GIAEdBR0FBQABDh0FBSACDg4ODAcEDhURQQESJBIkDgYAAQERgJEFAAIODg4E
IAEODgYQAQEeAA4ICgEVEj0BEiQGFRI9ARIkCCAAFRFBARMABhURQQESJAQgABMABAAAEVkDIAAC
CSADARJRHQgSVQUgAgEIHAMHAQgGAAIIElUOBSABHQgIBSAAEoChBiABEoClHAUAABKAqQYgARwS
gK0IAAESgLERgLUFIAASgLkHIAIBDhKAuQi3elxWGTTgiQiJhF3NgIDMkQgwrU/msqau7QMGEhQD
BhIYAwYSDAMGEl0DBhJlAwYSaQMGEiAFIAIODggEIAEBAgUgAQERWQsgBAEIHQgdElESVQUgAQES
XQMgAA4EAAASZQQAABJpBQABARJpBAAAEiADAAABAygADgMoAAIEKAARWQQIABJlBAgAEmkECAAS
IAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0Nf
NjE0Yzg4YjMzZWIwNGI4OThjYjU3NWQ1Njg1ZjA3NGMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAyNQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACAPQAAAAAAAAAAAACa
PQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjD0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANgAxADQAYwA4ADgAYgAzADMAZQBiADAANABiADgAOQA4AGMAYgA1ADcANQBkADUANgA4ADUA
ZgAwADcANABjAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA2ADEANABjADgAOABiADMA
MwBlAGIAMAA0AGIAOAA5ADgAYwBiADUANwA1AGQANQA2ADgANQBmADAANwA0AGMALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADYAMQA0AGMA
OAA4AGIAMwAzAGUAYgAwADQAYgA4ADkAOABjAGIANQA3ADUAZAA1ADYAOAA1AGYAMAA3ADQAYwAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA2ADEANABjADgA
OABiADMAMwBlAGIAMAA0AGIAOAA5ADgAYwBiADUANwA1AGQANQA2ADgANQBmADAANwA0AGMAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAKw9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_614c88b33eb04b898cb575d5685f074c</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ApiBaseUrl,User::ExchangeListEndpoint,User::RunId</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">95</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[DW_row_checksum]"
                              dataType="wstr"
                              length="64"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[DW_row_checksum]"
                              name="DW_row_checksum" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[DW_source_system]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[DW_source_system]"
                              name="DW_source_system" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[DW_updated_on]"
                              dataType="dbTimeStamp"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[DW_updated_on]"
                              name="DW_updated_on" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[DW_run_id]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[DW_run_id]"
                              name="DW_run_id" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[type]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[type]"
                              name="type" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[country]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[country]"
                              name="country" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[name]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[name]"
                              name="name" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[exchange_code]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0].Columns[exchange_code]"
                              name="exchange_code" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Sequence Container\For Loop Container\Import Exchanges.Paths[Output 0]"
                      endId="Package\Sequence Container\For Loop Container\Import Exchanges\Row Count.Inputs[Row Count Input 1]"
                      name="Output 0"
                      startId="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component.Outputs[Output 0]" />
                    <path
                      refId="Package\Sequence Container\For Loop Container\Import Exchanges.Paths[Row Count Output 1]"
                      endId="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Row Count Output 1"
                      startId="Package\Sequence Container\For Loop Container\Import Exchanges\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Merge Exchange_Dim"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{CDF95178-4C9F-49B9-9D97-4B3FEFDC9ECF}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge Exchange_Dim"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
                  SQLTask:SqlStatementSource="MERGE dbo.Exchange_Dim AS T&#xA;USING dbo.Staging_Exchange_Dim AS S&#xA;ON  T.exchange_code = S.exchange_code&#xA;AND T.DW_row_checksum &lt;&gt; S.DW_row_checksum&#xA;WHEN MATCHED THEN&#xA;    UPDATE SET&#xA;        T.name            = S.name,&#xA;        T.country         = S.country,&#xA;        T.type            = S.type,&#xA;        T.DW_row_checksum = S.DW_row_checksum,&#xA;        T.DW_run_id       = S.DW_run_id,&#xA;        T.DW_updated_on   = S.DW_updated_on,&#xA;        T.DW_source_system= S.DW_source_system;&#xA;&#xA;MERGE dbo.Exchange_Dim AS T&#xA;USING dbo.Staging_Exchange_Dim AS S&#xA;ON  T.exchange_code = S.exchange_code&#xA;WHEN NOT MATCHED THEN&#xA;    INSERT (exchange_code, name, country, type,&#xA;            DW_row_checksum, DW_run_id, DW_updated_on, DW_source_system)&#xA;    VALUES (S.exchange_code, S.name, S.country, S.type,&#xA;            S.DW_row_checksum, S.DW_run_id, S.DW_updated_on, S.DW_source_system);&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Merge Time_Dim"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{2A030453-B1A9-447E-9923-CADFDE5920B1}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge Time_Dim"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
                  SQLTask:SqlStatementSource="MERGE dbo.Time_Dim AS T&#xA;USING dbo.Staging_Time_Dim AS S&#xA;ON  T.[date] = S.[date]&#xA;AND T.DW_row_checksum &lt;&gt; S.DW_row_checksum&#xA;WHEN MATCHED THEN&#xA;    UPDATE SET&#xA;        T.[year]          = S.[year],&#xA;        T.[month]         = S.[month],&#xA;        T.[day]           = S.[day],&#xA;        T.is_weekday      = S.is_weekday,&#xA;        T.DW_row_checksum = S.DW_row_checksum,&#xA;        T.DW_run_id       = S.DW_run_id,&#xA;        T.DW_updated_on   = S.DW_updated_on,&#xA;        T.DW_source_system= S.DW_source_system;&#xA;&#xA;MERGE dbo.Time_Dim AS T&#xA;USING dbo.Staging_Time_Dim AS S&#xA;ON  T.[date] = S.[date]&#xA;WHEN NOT MATCHED THEN&#xA;    INSERT ([date], [year], [month], [day], is_weekday,&#xA;            DW_row_checksum, DW_run_id, DW_updated_on, DW_source_system)&#xA;    VALUES (S.[date], S.[year], S.[month], S.[day], S.is_weekday,&#xA;            S.DW_row_checksum, S.DW_run_id, S.DW_updated_on, S.DW_source_system);&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Merge to Crypto_Dim"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{29E19BE9-A799-4F14-B34B-97D245FCF7DA}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge to Crypto_Dim"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
                  SQLTask:SqlStatementSource="MERGE dbo.Crypto_Dim AS T&#xA;USING dbo.Staging_Crypto_Dim AS S&#xA;ON  T.symbol = S.symbol         -- chave natural&#xA;AND T.DW_row_checksum &lt;&gt; S.DW_row_checksum&#xA;WHEN MATCHED THEN&#xA;    UPDATE SET&#xA;        T.name            = S.name,&#xA;        T.category        = S.category,&#xA;        T.DW_row_checksum = S.DW_row_checksum,&#xA;        T.DW_run_id       = S.DW_run_id,&#xA;        T.DW_updated_on   = S.DW_updated_on,&#xA;        T.DW_source_system= S.DW_source_system;&#xA;&#xA;/*-- Insere se ainda não existir --*/&#xA;MERGE dbo.Crypto_Dim AS T&#xA;USING dbo.Staging_Crypto_Dim AS S&#xA;ON  T.symbol = S.symbol&#xA;WHEN NOT MATCHED THEN&#xA;    INSERT (symbol, name, category,&#xA;            DW_row_checksum, DW_run_id, DW_updated_on, DW_source_system)&#xA;    VALUES (S.symbol, S.name, S.category,&#xA;            S.DW_row_checksum, S.DW_run_id, S.DW_updated_on, S.DW_source_system);&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Truncate Staging_Crypto_Dim"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{94C3EBA0-E8D2-4CBB-9800-EC532FB3E8F4}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate Staging_Crypto_Dim"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
                  SQLTask:SqlStatementSource="TRUNCATE TABLE dbo.Staging_Crypto_Dim;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Truncate Staging_Exchange_Dim"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{38F2B155-CE99-4D24-BEF3-6470FC9FBB90}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate Staging_Exchange_Dim"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
                  SQLTask:SqlStatementSource="TRUNCATE TABLE dbo.Staging_Exchange_Dim;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Truncate Staging_Time_Dim"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{92EBF1C6-68A7-4BCC-A0AE-CFBE5C8DC7E1}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate Staging_Time_Dim"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
                  SQLTask:SqlStatementSource="TRUNCATE TABLE dbo.Staging_Time_Dim;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{3805F502-D3B4-461B-9CCB-9F28D51BDFFC}"
              DTS:From="Package\Sequence Container\For Loop Container\Truncate Staging_Crypto_Dim"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\For Loop Container\Import Coin List" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint1]"
              DTS:CreationName=""
              DTS:DTSID="{61A3107E-0441-4F4E-B7E8-E7DD3A5E4121}"
              DTS:From="Package\Sequence Container\For Loop Container\Truncate Staging_Exchange_Dim"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\For Loop Container\Import Exchanges" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{71C410D8-702B-496F-AAD1-D3E58322E72A}"
              DTS:From="Package\Sequence Container\For Loop Container\Import Coin List"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container\For Loop Container\Merge to Crypto_Dim" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{9B7F5A15-F426-4E79-9B9C-C1878DDF21EB}"
              DTS:From="Package\Sequence Container\For Loop Container\Import Exchanges"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container\For Loop Container\Merge Exchange_Dim" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{2CA1B78F-B468-4852-8BE0-41464D0312B3}"
              DTS:From="Package\Sequence Container\For Loop Container\Truncate Staging_Time_Dim"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Sequence Container\For Loop Container\Generate Calendar" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{18AC5200-75B5-48EC-9CEF-80DF7562E18C}"
              DTS:From="Package\Sequence Container\For Loop Container\Generate Calendar"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Sequence Container\For Loop Container\Execute SQL Task" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{642E55CB-504A-43AE-BCFF-E0C0ADCF90FB}"
              DTS:From="Package\Sequence Container\For Loop Container\Execute SQL Task"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Sequence Container\For Loop Container\Merge Time_Dim" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{CBD60C11-0A7E-4F55-AB00-38F64F798D10}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{6E60A784-1B45-4781-B323-AE3E02BF45C9}"
            DTS:ObjectName="{6E60A784-1B45-4781-B323-AE3E02BF45C9}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::CoinListADO" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{B71BE0DA-E03C-4759-99FE-087A78AE2521}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Data Flow Task"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[Staging_Prices_Fact]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
                          connectionManagerRefId="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_updated_on]"
                              cachedDataType="dbTimeStamp"
                              cachedName="DW_updated_on"
                              externalMetadataColumnId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_updated_on]"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[DW_updated_on]" />
                            <inputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_run_id]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="DW_run_id"
                              externalMetadataColumnId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_run_id]"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[DW_run_id]" />
                            <inputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[market_cap_usd]"
                              cachedDataType="numeric"
                              cachedName="market_cap_usd"
                              cachedPrecision="38"
                              cachedScale="2"
                              externalMetadataColumnId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[market_cap_usd]"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[market_cap_usd]" />
                            <inputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[volume_usd]"
                              cachedDataType="numeric"
                              cachedName="volume_usd"
                              cachedPrecision="38"
                              cachedScale="2"
                              externalMetadataColumnId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[volume_usd]"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[volume_usd]" />
                            <inputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[price_usd]"
                              cachedDataType="numeric"
                              cachedName="price_usd"
                              cachedPrecision="18"
                              cachedScale="8"
                              externalMetadataColumnId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[price_usd]"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[price_usd]" />
                            <inputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[event_date]"
                              cachedDataType="date"
                              cachedName="event_date"
                              externalMetadataColumnId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[event_date]"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[event_date]" />
                            <inputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[coin_code]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="coin_code"
                              externalMetadataColumnId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[coin_code]"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[coin_code]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[coin_code]"
                              dataType="wstr"
                              length="50"
                              name="coin_code" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[event_date]"
                              dataType="dbDate"
                              name="event_date" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[price_usd]"
                              dataType="numeric"
                              name="price_usd"
                              precision="18"
                              scale="8" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[volume_usd]"
                              dataType="numeric"
                              name="volume_usd"
                              precision="38"
                              scale="2" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[market_cap_usd]"
                              dataType="numeric"
                              name="market_cap_usd"
                              precision="38"
                              scale="2" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_run_id]"
                              dataType="wstr"
                              length="50"
                              name="DW_run_id" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_updated_on]"
                              dataType="dbTimeStamp"
                              name="DW_updated_on" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::SuccessRows_Prices</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component 1"
                      version="13">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CoinCode
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CoinCode"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String CoinId
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CoinId"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String RunId
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["RunId"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Namespaces
using System;
using System.IO;
using System.Net;
using Newtonsoft.Json.Linq;
#endregion

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPoint]
public class ScriptMain : UserComponent
{
    // ------------------------------------------------------------------
    // Variáveis do pacote (preenchidas em PreExecute)
    // ------------------------------------------------------------------
    private string _coinIds;
    private string _runId;

    public override void PreExecute()
    {
        base.PreExecute();

        _coinIds = Variables.CoinCode; ;   // "bitcoin,ethereum,dogecoin"
        _runId = Variables.RunId;     // opcional – pode estar vazio
    }

    public override void CreateNewOutputRows()
    {
        // -------- 1. Chamada simples à API -----------------------------
        string url = $"https://api.coingecko.com/api/v3/coins/markets" +
                     $"?vs_currency=usd&ids={_coinIds}&order=market_cap_desc" +
                     $"&per_page=250&page=1&sparkline=false";

        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

        string json;
        var req = (HttpWebRequest)WebRequest.Create(url);
        req.Method = "GET";

        using (var resp = (HttpWebResponse)req.GetResponse())
        using (var sr = new StreamReader(resp.GetResponseStream()))
            json = sr.ReadToEnd();

        var rows = JArray.Parse(json);

        // -------- 2. Uma linha por moeda -------------------------------
        DateTime hojeUtc = DateTime.UtcNow.Date;
        DateTime nowUtc = DateTime.UtcNow;

        foreach (var r in rows)
        {
            Output0Buffer.AddRow();

            Output0Buffer.coincode = (string)r["symbol"];          // "btc"
            Output0Buffer.eventdate = hojeUtc;
            Output0Buffer.priceusd = Convert.ToDecimal((double)r["current_price"]);
            Output0Buffer.volumeusd = Convert.ToDecimal((double)r["total_volume"]);
            Output0Buffer.marketcapusd = Convert.ToDecimal((double)r["market_cap"]);
            Output0Buffer.DWrunid = _runId;
            Output0Buffer.DWupdatedon = nowUtc;
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime DWupdatedon
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DWupdatedon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DWrunid
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DWrunid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal marketcapusd
    {
        set
        {
            this[2] = value;
        }
    }
    public bool marketcapusd_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal volumeusd
    {
        set
        {
            this[3] = value;
        }
    }
    public bool volumeusd_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal priceusd
    {
        set
        {
            this[4] = value;
        }
    }
    public bool priceusd_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime eventdate
    {
        set
        {
            this[5] = value;
        }
    }
    public bool eventdate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String coincode
    {
        set
        {
            this[6] = value;
        }
    }
    public bool coincode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d8a5598ff3804ee1bf88f148fbd37492.Properties.Settings.get_Default():SC_d8a5598ff3804ee1bf88f148fbd37492.Properties.Sett" +
    "ings")]

namespace SC_d8a5598ff3804ee1bf88f148fbd37492.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_d8a5598ff3804ee1bf88f148fbd37492.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8391C023-B02B-44AC-B0CD-C3C05EF4FB64}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d8a5598ff3804ee1bf88f148fbd37492</RootNamespace>
    <AssemblyName>SC_d8a5598ff3804ee1bf88f148fbd37492</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.1.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\filip\OneDrive\Ambiente de Trabalho\net\newtonsoft.json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_d8a5598ff3804ee1bf88f148fbd37492</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_d8a5598ff3804ee1bf88f148fbd37492</msb:DisplayName>
    <msb:ProjectId>{0B1F880D-B523-4B8C-8988-3FCAC669125C}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_d8a5598ff3804ee1bf88f148fbd37492.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d8a5598ff3804ee1bf88f148fbd37492")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_d8a5598ff3804ee1bf88f148fbd37492")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d8a5598ff3804ee1bf88f148fbd37492.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d8a5598ff3804ee1bf88f148fbd37492.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d8a5598ff3804ee1bf88f148fbd37492.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d8a5598ff3804ee1bf88f148fbd37492.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d8a5598ff3804ee1bf88f148fbd37492.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_d8a5598ff3804ee1bf88f148fbd37492.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMOZbWgAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAAOj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOg8AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAQB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAc
PQAAAAAAAEgAAAACAAUA0CQAAGAXAAABAAAAAAAAADA8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKYCKBAAAAoCAnsEAAAEbx0AAAZ9AQAABAICewQAAARvHwAA
Bn0CAAAEKgAAGzADAG0BAAABAAARcgEAAHACewEAAARyigAAcCgRAAAKIAAMAAAoEgAACigTAAAK
dCQAAAElcgABAHBvFAAACm8VAAAKdA8AAAENCW8WAAAKcxcAAAoTBBEEbxgAAAoK3hYRBCwHEQRv
GQAACtwJLAYJbxkAAArcBigaAAAKKBsAAAoTBRIFKBwAAAoLKBsAAAoMbx0AAAoTBji/AAAAEQZv
HgAAChMHAnsFAAAEbxMAAAYCewUAAAQRB3IIAQBwbx8AAAooIAAACm8RAAAGAnsFAAAEB28PAAAG
AnsFAAAEEQdyFgEAcG8fAAAKKCEAAApsKCIAAApvDQAABgJ7BQAABBEHcjIBAHBvHwAACighAAAK
bCgiAAAKbwsAAAYCewUAAAQRB3JMAQBwbx8AAAooIQAACmwoIgAACm8JAAAGAnsFAAAEAnsCAAAE
bwcAAAYCewUAAAQIbwUAAAYRBm8jAAAKOjX////eDBEGLAcRBm8ZAAAK3CoAAAABKAAAAgBMAApW
AAwAAAAAAgA/ACNiAAoAAAAAAgCOANJgAQwAAAAAHgIoFgAABioqAgMEBSgkAAAKKjoCFgOMDgAA
ASglAAAKKloDLAgCFigmAAAKKnJiAQBwcycAAAp6JgIXAyglAAAKKloDLAgCFygmAAAKKnJiAQBw
cycAAAp6OgIYA4wWAAABKCUAAAoqWgMsCAIYKCYAAAoqcmIBAHBzJwAACno6AhkDjBYAAAEoJQAA
CipaAywIAhkoJgAACipyYgEAcHMnAAAKejoCGgOMFgAAASglAAAKKloDLAgCGigmAAAKKnJiAQBw
cycAAAp6OgIbA4wOAAABKCUAAAoqWgMsCAIbKCYAAAoqcmIBAHBzJwAACnomAhwDKCUAAAoqWgMs
CAIcKCYAAAoqcmIBAHBzJwAACnoeAigoAAAKKh4CKCkAAAoqHgIoKgAACip+AigrAAAKAgJzGwAA
Bn0DAAAEAgJzHAAABn0EAAAEKgYqbgJ7BQAABCwSAnsFAAAEbxQAAAYCFH0FAAAEKgAAABMwBQBJ
AAAAAgAAERYKKy4EBpQOBHL/AQBwKCwAAAozGQIFBpoCBAaUKC0AAAoOBHMEAAAGfQUAAAQGF1gK
BgMyzgJvGgAABgJvFwAABgIoGAAABio6AiguAAAKAgN9BgAABCo6AiguAAAKAgN9BwAABCqWAnsH
AAAEby8AAApyEQIAcG8wAAAKKDEAAApvMgAACnQgAAABKpYCewcAAARvLwAACnIjAgBwbzAAAAoo
MQAACm8yAAAKdCAAAAEqlgJ7BwAABG8vAAAKcjECAHBvMAAACigxAAAKbzIAAAp0IAAAASoeAigu
AAAKKq5+CAAABC0ecj0CAHDQBwAAAigzAAAKbzQAAApzNQAACoAIAAAEfggAAAQqGn4JAAAEKh4C
gAkAAAQqGn4KAAAEKh4CKDYAAAoqLnMlAAAGgAoAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMw
MzE5AAAAAAUAbAAAADAIAAAjfgAAnAgAALQJAAAjU3RyaW5ncwAAAABQEgAAsAIAACNVUwAAFQAA
EAAAACNHVUlEAAAAEBUAAFACAAAjQmxvYgAAAAAAAAACAAABVxWiCQkBAAAA+gEzABYAAAEAAAAz
AAAACAAAAAoAAAAmAAAAGAAAADYAAAAQAAAAAgAAAAQAAAAUAAAAFQAAAAEAAAABAAAABgAAAAEA
AAAAAFIEAQAAAAAABgBOAyUHBgDiAyUHBgCaAgkHDwCZBwAABgDHAq4FBgAxA64FBgASA64FBgDJ
A64FBgBuA64FBgCHA64FBgDeAq4FBgD5AhEECgCiA48BBgCGAU8FDgAFAnIIBgBGBoEABgA6AJQA
EgBiBTEGCgB7Bo8BFgBsBo8BCgD2BY8BBgA0BE8FCgDCCI8BBgBrCE8FBgB9AgkHBgCMBkUHBgDq
BZkFDgBNAjwEDgCuAjwEDgDtAYQFBgBiAiUHBgArBE8FDgCcBnIIDgCwAXIIDgAHCXIIDgADCXII
DgAJAnIIBgA2BYEABgBTBoEABgBWAU8FEgCeCTEGBgD7CE8FBgDYBhsIBgDABU8FGgARALAGGgAB
ALAGXwBcCQAAGgAiALAGBgDAAU8FBgBiAU8FBgCpCa4FAAAAAGwAAAAAAAEAAQABABAAaQUAABAA
AQABAAEAEABeBgAATQADAAQAAQAQAKQIAABdAAMAFgABABAALggAAGEABgAbAAEAEADjBwAAYQAH
ABwAAAAQAEwHqAdhAAgAIAAAARAAEgioB3kACgAkAAEAHAcMAQEAxAAMAQYALggPAQYA4wcTAQYA
XgYXAQEAsggbAQEAsggbAREAVgUfAREA3QEjAREALAEnAVAgAAAAAMYAAAQGAAEAfCAAAAAAxgBQ
CAYAAQAgIgAAAACGGPIGBgABACgiAAAAAIYY8gafAAEAMyIAAAAAhgh0BSsBBABCIgAAAACGCPcE
MQEFAFkiAAAAAIYI3wAQAAYAYyIAAAAAhgh6BDEBBwB6IgAAAACGCBsBNgEIAIkiAAAAAIYItgQx
AQkAoCIAAAAAhggNATYBCgCvIgAAAACGCKEEMQELAMYiAAAAAIYIAAE2AQwA1SIAAAAAhgiNBDEB
DQDsIgAAAACGCDgCKwEOAPsiAAAAAIYI4gQxAQ8AEiMAAAAAhghJARAAEAAcIwAAAACGCM4EMQER
ADMjAAAAAIYAlwkGABIAOyMAAAAAhgB9CAYAEgBDIwAAAACGAIAImwASAEsjAAAAAIYY8gYGABIA
ayMAAAAAxgFCCAYAEgBtIwAAAACBAMsABgASAIwjAAAAAMYAMwk8ARIAayMAAAAAxgFQCAYAFgDh
IwAAAACGGPIGSAEWAPAjAAAAAIYY8gZIARcA/yMAAAAAhgg8AVkAGAAlJAAAAACGCK8AWQAYAEsk
AAAAAIYIugBZABgAcSQAAAAAgxjyBgYAGAB5JAAAAACTCIgGTgEYAKUkAAAAAJMIxQFTARgArCQA
AAAAkwjRAVgBGAC0JAAAAACWCJgIXgEZALskAAAAAIYY8gYGABkAwyQAAAAAkRj4BmMBGQAAAAEA
gQYAAAIA7QcAAAMABAYAAAEACwQAAAEACwQAAAEACwQAAAEACwQAAAEACwQAAAEACwQAAAEACwQA
AAEACwQAAAEACwQAAAEACwQAAAEACwQAAAEACwQAAAEACwQAAAEACwQAAAEASAgAAAIA/wYAAAMA
OggAAAQABAYAAAEAyAgAAAEAyAgAAAEACwQJAPIGAQARAPIGBgAZAPIGCgApAPIGEAAxAPIGEAA5
APIGEABBAPIGEABJAPIGEABRAPIGEABZAPIGEABhAPIGEABpAPIGBgDJAPIGBgDpAPIGFQD5APIG
BgC5AAAEBgABAWQIMQAJARYFOAAZAUYCPwAZAfUAEAAZARUCRgApASsFTACBAPIGUgA5AesAWQBB
ASECBgBJASkCXQBxAIwJZABxAC8CaQBJAeQGbgAMANIIfgCRAD0FgwCRAIwIiQCRAIwIjwBRATIE
lQBZAT8JmwCZAPIGnwCZAEYFqQCZAA4FAQBhAfIGEACZAJcJBgCZAH0IBgCZAIAImwC5APIGBgC5
AHUAswC5AAEIugDBAPIGBgC5ANcHwABpAT0FxgC5AHcJzQBxAUgJ0wCJAXQB2gCJAaUJ4wDRAPIG
6QDxAPIGBgAuAAsAiAEuABMAkQEuABsAsAEuACMAuQEuACsA4gEuADMA4gEuADsA4gEuAEMAuQEu
AEsA6AEuAFMA4gEuAFsA/wFDAGMASQLjAGsASQJBAXsASQJJAnMAsAFpAnMAsAEbAK8AAwABAAYA
DwAHABIACAAUAAAAeAVnAQAA+wRsAQAA4wBwAQAAfgRsAQAAHwF0AQAAugRsAQAAEQF0AQAApQRs
AQAABAF0AQAAkQRsAQAAPAJnAQAA5gRsAQAATQFwAQAA0gRsAQAAQAFwAQAAswBwAQAAvgBwAQAA
jAZ5AQAA5QF+AQAAnAiDAQEABQADAAEABgAFAAEABwAHAAEACAAJAAEACQALAAEACgANAAEACwAP
AAEADAARAAEADQATAAEADgAVAAEADwAXAAEAEAAZAAEAEQAbAAEAEgAdAAIAHQAfAAIAHgAhAAIA
HwAjAAIAIQAlAAIAIgAnAAEAIwAnAAIAJAApAHcABIAAAAEAAAAAAAAAAAAAAAAASAAAAAQAAAAA
AAAAAAAAAPEAiwAAAAAAEAAAAAAAAAAAAAAA+gDeCAAAAAAEAAAAAAAAAAAAAADxAE8FAAAAAA0A
AAAAAAAAAAAAAAMB2gUAAAAAEAAAAAAAAAAAAAAA+gASCQAAAAAQAAAAAAAAAAAAAAD6AA4GAAAA
AAAAAAABAAAAVgcAAAAAAElEVFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFs
dWF0b3JDb250ZXh0MTAwAElFbnVtZXJhdG9yYDEAU0NfZDhhNTU5OGZmMzgwNGVlMWJmODhmMTQ4
ZmJkMzc0OTIAPE1vZHVsZT4AR2V0T3V0cHV0SUQAU3lzdGVtLklPAG1zY29ybGliAFN5c3RlbS5D
b2xsZWN0aW9ucy5HZW5lcmljAGdldF9Db2luSWQAZ2V0X1J1bklkAF9ydW5JZABNYXJrT3V0cHV0
c0ZpbmlzaGVkAHNldF9EV3J1bmlkAFJlYWRUb0VuZABzZXRfTWV0aG9kAHNldF9wcmljZXVzZABz
ZXRfdm9sdW1ldXNkAHNldF9tYXJrZXRjYXB1c2QAZGVmYXVsdEluc3RhbmNlAGdldF9Db2luQ29k
ZQBzZXRfY29pbmNvZGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21I
YW5kbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAU2VjdXJpdHlQ
cm90b2NvbFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAEh0dHBXZWJSZXNwb25zZQBHZXRSZXNwb25zZQBEaXNwb3NlAFBh
cnNlAGdldF9EYXRlAHNldF9ldmVudGRhdGUAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5
UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBT
dHJpbmcAVG9EZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19kOGE1NTk4ZmYzODA0ZWUx
YmY4OGYxNDhmYmQzNzQ5Mi5kbGwAc2V0X0RXcnVuaWRfSXNOdWxsAHNldF9wcmljZXVzZF9Jc051
bGwAc2V0X3ZvbHVtZXVzZF9Jc051bGwAc2V0X21hcmtldGNhcHVzZF9Jc051bGwAc2V0X2NvaW5j
b2RlX0lzTnVsbABzZXRfZXZlbnRkYXRlX0lzTnVsbABzZXRfRFd1cGRhdGVkb25fSXNOdWxsAFNl
dE51bGwAc2V0X1NlY3VyaXR5UHJvdG9jb2wAR2V0UmVzcG9uc2VTdHJlYW0AZ2V0X0l0ZW0Ac2V0
X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAEpUb2tlbgBTY3JpcHRNYWluAHNldF9EV3VwZGF0ZWRv
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAE5ld3RvbnNvZnQuSnNvbgBDdWx0dXJlSW5m
bwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVX
cmFwAE5ld3RvbnNvZnQuSnNvbi5MaW5xAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAE91dHB1dDBC
dWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAU2Vy
dmljZVBvaW50TWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIA
SUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5E
aWFnbm9zdGljcwBfY29pbklkcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3Rl
bS5SZXNvdXJjZXMAU0NfZDhhNTU5OGZmMzgwNGVlMWJmODhmMTQ4ZmJkMzc0OTIuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2Q4YTU1OThmZjM4MDRlZTFi
Zjg4ZjE0OGZiZDM3NDkyLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNv
bHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBTeXN0ZW0uQ29sbGVjdGlvbnMA
Q29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29u
Y2F0AE9iamVjdABTeXN0ZW0uTmV0AFNldEVuZE9mUm93c2V0AG9wX0V4cGxpY2l0AGdldF9EZWZh
dWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ3Vy
cmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENvbnZlcnQASHR0cFdlYlJlcXVlc3QA
TWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQATW92ZU5leHQAR2V0
VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9y
Q29udGV4dABnZXRfVXRjTm93AEFkZFJvdwBKQXJyYXkAZ2V0X0Fzc2VtYmx5AAAAAICHaAB0AHQA
cABzADoALwAvAGEAcABpAC4AYwBvAGkAbgBnAGUAYwBrAG8ALgBjAG8AbQAvAGEAcABpAC8AdgAz
AC8AYwBvAGkAbgBzAC8AbQBhAHIAawBlAHQAcwA/AHYAcwBfAGMAdQByAHIAZQBuAGMAeQA9AHUA
cwBkACYAaQBkAHMAPQAAdSYAbwByAGQAZQByAD0AbQBhAHIAawBlAHQAXwBjAGEAcABfAGQAZQBz
AGMAJgBwAGUAcgBfAHAAYQBnAGUAPQAyADUAMAAmAHAAYQBnAGUAPQAxACYAcwBwAGEAcgBrAGwA
aQBuAGUAPQBmAGEAbABzAGUAAAdHAEUAVAAADXMAeQBtAGIAbwBsAAAbYwB1AHIAcgBlAG4AdABf
AHAAcgBpAGMAZQAAGXQAbwB0AGEAbABfAHYAbwBsAHUAbQBlAAAVbQBhAHIAawBlAHQAXwBjAGEA
cAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAA
cwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAg
AHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUA
dAAgADAAABFDAG8AaQBuAEMAbwBkAGUAAA1DAG8AaQBuAEkAZAAAC1IAdQBuAEkAZAAAcVMAQwBf
AGQAOABhADUANQA5ADgAZgBmADMAOAAwADQAZQBlADEAYgBmADgAOABmADEANAA4AGYAYgBkADMA
NwA0ADkAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAP6jjmXd
0HNBiOZC6gPVY8MABCABAQgDIAABBSABARERBCABAQ4FIAEBEXEVBwgOETkRORI9EkERORUSRQES
SRJJBgADDg4ODgYAAQERgIkGAAESgI0OBSAAEoCVBSAAEoCZBiABARKAmQMgAA4GAAESgKUOBAAA
ETkEIAAROQggABUSRQESSQYVEkUBEkkEIAATAAUgARJJHAUAAQ4SSQUAAQ0SSQUAARFZDQMgAAIJ
IAMBElEdCBJVBSACAQgcAwcBCAYAAggSVQ4FIAEdCAgFIAASgLUGIAESgLkcBQAAEoC9BiABHBKA
wQgAARKAxRGAyQUgABKAzQcgAgEOEoDNCLd6XFYZNOCJCImEXc2AgMyRCDCtT+aypq7tAgYOAwYS
FAMGEhgDBhIMAwYSXQMGEmkDBhJtAwYSIAUgAQEROQQgAQECBSABARFZCyAEAQgdCB0SURJVBSAB
ARJdBAAAEmkEAAASbQUAAQESbQQAABIgAwAAAQQoABE5AygAAgMoAA4EKAARWQQIABJpBAgAEm0E
CAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U0NfZDhhNTU5OGZmMzgwNGVlMWJmODhmMTQ4ZmJkMzc0OTIAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyNQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABA9AAAAAAAAAAAA
ACo9AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcPQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AZAA4AGEANQA1ADkAOABmAGYAMwA4ADAANABlAGUAMQBiAGYAOAA4AGYAMQA0ADgAZgBiAGQA
MwA3ADQAOQAyAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBkADgAYQA1ADUAOQA4AGYA
ZgAzADgAMAA0AGUAZQAxAGIAZgA4ADgAZgAxADQAOABmAGIAZAAzADcANAA5ADIALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGQAOABhADUA
NQA5ADgAZgBmADMAOAAwADQAZQBlADEAYgBmADgAOABmADEANAA4AGYAYgBkADMANwA0ADkAMgAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBkADgAYQA1ADUA
OQA4AGYAZgAzADgAMAA0AGUAZQAxAGIAZgA4ADgAZgAxADQAOABmAGIAZAAzADcANAA5ADIAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADw9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_d8a5598ff3804ee1bf88f148fbd37492</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::CoinCode,User::CoinId,User::RunId</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">0A</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[DW_updated_on]"
                              dataType="dbTimeStamp"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[DW_updated_on]"
                              name="DW_updated_on" />
                            <outputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[DW_run_id]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[DW_run_id]"
                              name="DW_run_id" />
                            <outputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[market_cap_usd]"
                              dataType="numeric"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[market_cap_usd]"
                              name="market_cap_usd"
                              precision="38"
                              scale="2" />
                            <outputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[volume_usd]"
                              dataType="numeric"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[volume_usd]"
                              name="volume_usd"
                              precision="38"
                              scale="2" />
                            <outputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[price_usd]"
                              dataType="numeric"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[price_usd]"
                              name="price_usd"
                              precision="18"
                              scale="8" />
                            <outputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[event_date]"
                              dataType="date"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[event_date]"
                              name="event_date" />
                            <outputColumn
                              refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[coin_code]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[coin_code]"
                              name="coin_code" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task.Paths[Output 0]"
                      endId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Row Count.Inputs[Row Count Input 1]"
                      name="Output 0"
                      startId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1.Outputs[Output 0]" />
                    <path
                      refId="Package\Sequence Container\Foreach Loop Container\Data Flow Task.Paths[Row Count Output 1]"
                      endId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Row Count Output 1"
                      startId="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Merge to Prices_Fact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{678652B1-0B41-4F12-818C-E9DD6FF2369D}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge to Prices_Fact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
                  SQLTask:SqlStatementSource="MERGE dbo.Prices_Fact   AS T&#xA;USING (&#xA;        /* —­­- Resolve as chaves surrogate —­­- */&#xA;        SELECT  cd.id          AS crypto_id,&#xA;                td.id          AS time_id,&#xA;                s.price_usd,&#xA;                s.volume_usd,&#xA;                s.market_cap_usd,&#xA;                /* hash para detectar updates */&#xA;                HASHBYTES(&#xA;                    'MD5',&#xA;                    CONCAT_WS('|',&#xA;                              cd.id,&#xA;                              td.id,&#xA;                              s.price_usd,&#xA;                              s.volume_usd,&#xA;                              s.market_cap_usd)&#xA;                )              AS DW_row_checksum,&#xA;                s.DW_run_id,&#xA;                s.DW_updated_on&#xA;        FROM    dbo.Staging_Prices_Fact AS s&#xA;        JOIN    dbo.Crypto_Dim  cd&#xA;                  ON cd.symbol = s.coin_code    -- nvarchar → varchar OK&#xA;        JOIN    dbo.Time_Dim    td&#xA;                  ON td.[date]  = s.event_date&#xA;      ) AS S&#xA;      ON  T.crypto_id = S.crypto_id&#xA;      AND T.time_id   = S.time_id&#xA;&#xA;/* —­­- LINHA JÁ EXISTE MAS MUDOU ALGUM VALOR —­­- */&#xA;WHEN MATCHED&#xA;     AND T.DW_row_checksum &lt;&gt; S.DW_row_checksum&#xA;THEN UPDATE SET&#xA;        price_usd       = S.price_usd,&#xA;        volume_usd      = S.volume_usd,&#xA;        market_cap_usd  = S.market_cap_usd,&#xA;        DW_row_checksum = S.DW_row_checksum,&#xA;        DW_run_id       = S.DW_run_id,&#xA;        DW_updated_on   = S.DW_updated_on&#xA;&#xA;/* —­­- LINHA NOVA —­­- */&#xA;WHEN NOT MATCHED&#xA;THEN INSERT (crypto_id, time_id,&#xA;             price_usd, volume_usd, market_cap_usd,&#xA;             DW_row_checksum, DW_run_id, DW_updated_on)&#xA;     VALUES (S.crypto_id, S.time_id,&#xA;             S.price_usd, S.volume_usd, S.market_cap_usd,&#xA;             S.DW_row_checksum, S.DW_run_id, S.DW_updated_on);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Truncate Staging_Prices_Fact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{42F60FD5-4C09-4BA4-BBE3-760E1B65D2BB}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate Staging_Prices_Fact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
                  SQLTask:SqlStatementSource="TRUNCATE TABLE dbo.Staging_Prices_Fact;&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{9E876B9C-E519-4D7E-8985-68669EBA88BC}"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Truncate Staging_Prices_Fact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Data Flow Task" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{F93ADA21-5DD9-489B-80CD-7158773FF475}"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Data Flow Task"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Merge to Prices_Fact" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{827F1159-7E6A-4D08-8A17-A704B3DC433B}"
              DTS:ObjectName="{827F1159-7E6A-4D08-8A17-A704B3DC433B}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::CoinCode" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Load coinListADO"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{089EA8F7-9C02-49C6-A07F-99141DFC934C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load coinListADO"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
              SQLTask:SqlStatementSource="SELECT symbol        -- era id, agora é symbol&#xA;FROM   dbo.Crypto_Dim&#xA;ORDER  BY id;        -- (ou qualquer ordem que queiras"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::CoinListADO" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D396DCF3-88F1-4E34-AB76-8384D74951E1}"
          DTS:From="Package\Sequence Container\For Loop Container"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Load coinListADO" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{16A78153-B0D3-4140-B407-6DB964A80B6C}"
          DTS:From="Package\Sequence Container\Load coinListADO"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container\Foreach Loop Container" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{F86DF0DD-938D-491A-B231-EE2063DACC45}"
      DTS:From="Package\Audit START"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Sequence Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{2970961F-DD36-44D0-9630-099CAB7B5208}"
      DTS:From="Package\Generate RunId"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Audit START" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{CADE75CC-941E-4D35-AE4E-3FF5E95C6625}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\End Audit Process" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Audit START"
          TopLeft="279.166651413673,116.999999186397" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\End Audit Process"
          TopLeft="248.809510215172,898.202376685269" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Generate RunId"
          TopLeft="289.166650867297,36.3999997468789" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Sequence Container\For Loop Container\Execute SQL Task"
          TopLeft="356.01664424249,167.699998146792" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Sequence Container\For Loop Container\Generate Calendar"
          TopLeft="359.141644071748,95.1166653181945" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Sequence Container\For Loop Container\Import Coin List"
          TopLeft="13.4714179951528,109.728568194821" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Sequence Container\For Loop Container\Import Exchanges"
          TopLeft="186.316664048616,109.097617173964" />
        <NodeLayout
          Size="147.2,41.6"
          Id="Package\Sequence Container\For Loop Container\Merge Exchange_Dim"
          TopLeft="190.599986340603,193.533331223991" />
        <NodeLayout
          Size="158.4,41.6"
          Id="Package\Sequence Container\For Loop Container\Merge Time_Dim"
          TopLeft="357.058310852242,242.44999762699" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Sequence Container\For Loop Container\Merge to Crypto_Dim"
          TopLeft="13.1809385914657,193.390473357931" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Sequence Container\For Loop Container\Truncate Staging_Crypto_Dim"
          TopLeft="11.9904624660341,20.8190449931318" />
        <NodeLayout
          Size="143.2,41.6"
          Id="Package\Sequence Container\For Loop Container\Truncate Staging_Exchange_Dim"
          TopLeft="191.22737806602,22.8952368210234" />
        <NodeLayout
          Size="186.4,41.6"
          Id="Package\Sequence Container\For Loop Container\Truncate Staging_Time_Dim"
          TopLeft="350.808311193727,23.6166658153965" />
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="93.1309402305935,62.4190449931318">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47.3095232016894"
              Start="0,0"
              End="0,39.8095232016894">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.8095232016894" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint1]"
          TopLeft="262.372021057318,64.4952368210234">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.6023803529401"
              Start="0,0"
              End="0,37.1023803529401">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.1023803529401" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="93.7261782933093,151.328568194821">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.0619051631098"
              Start="0,0"
              End="0,34.5619051631098">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5619051631098" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="263.058325194609,150.697617173964">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.8357140500279"
              Start="0,0"
              End="0,35.3357140500279">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.3357140500279" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="442.774977632737,65.2166658153965">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.899999502798"
              Start="0,0"
              End="0,22.399999502798">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.399999502798" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="439.979144157119,136.716665318194">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.9833328285975"
              Start="0,0"
              End="0,23.4833328285975">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4833328285975" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="437.337477547366,209.299998146792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.1499994801982"
              Start="0,0"
              End="0,25.6499994801982">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.6499994801982" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="600.8,343.2"
          Size="600.8,386.4"
          Id="Package\Sequence Container\For Loop Container"
          TopLeft="41.4023666262751,23.6261885444205" />
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Sequence Container\Foreach Loop Container\Data Flow Task"
          TopLeft="58.6666247778489,114.883331517792" />
        <NodeLayout
          Size="176.8,41.6"
          Id="Package\Sequence Container\Foreach Loop Container\Merge to Prices_Fact"
          TopLeft="52.6547122268355,208.38333131762" />
        <NodeLayout
          Size="218.4,41.6"
          Id="Package\Sequence Container\Foreach Loop Container\Truncate Staging_Prices_Fact"
          TopLeft="25.5523326241327,22.1523797556522" />
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="134.309478700991,63.7523797556522">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51.1309517621403"
              Start="0,0"
              End="0,43.6309517621403">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.6309517621403" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="137.460668502342,156.483331517792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51.8999997998277"
              Start="0,0"
              End="0,44.3999997998277">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.3999997998277" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="294.4,322.4"
          Size="294.4,365.6"
          Id="Package\Sequence Container\Foreach Loop Container"
          TopLeft="695.348761707789,26.4714278675971" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Sequence Container\Load coinListADO"
          TopLeft="540.830913077663,467.899996067584" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="341.802366626275,410.026188544421">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="254.495213118055,57.8738075231632"
              Start="0,0"
              End="254.495213118055,50.3738075231632">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.3855110064453" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.3855110064453"
                    Point2="0,34.3855110064453"
                    Point3="4,34.3855110064453" />
                  <mssgle:LineSegment
                    End="250.495213118055,34.3855110064453" />
                  <mssgle:CubicBezierSegment
                    Point1="250.495213118055,34.3855110064453"
                    Point2="254.495213118055,34.3855110064453"
                    Point3="254.495213118055,38.3855110064453" />
                  <mssgle:LineSegment
                    End="254.495213118055,50.3738075231632" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="647.764246410997,467.899996067584">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="194.784515296793,-75.8285681999866"
              Start="0,0"
              End="194.784515296793,-68.3285681999866">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-26.7753018255556" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-26.7753018255556"
                    Point2="0,-30.7753018255556"
                    Point3="4,-30.7753018255556" />
                  <mssgle:LineSegment
                    End="190.784515296793,-30.7753018255556" />
                  <mssgle:CubicBezierSegment
                    Point1="190.784515296793,-30.7753018255556"
                    Point2="194.784515296793,-30.7753018255556"
                    Point3="194.784515296793,-34.7753018255556" />
                  <mssgle:LineSegment
                    End="194.784515296793,-68.3285681999866" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="994.4,574.4"
          Size="994.4,617.6"
          Id="Package\Sequence Container"
          TopLeft="220.714273654989,238.085712630096" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="361.566651413673,158.599999186397">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="356.347622241316,79.485713443699"
              Start="0,0"
              End="356.347622241316,71.985713443699">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.7428567218495" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.7428567218495"
                    Point2="0,39.7428567218495"
                    Point3="4,39.7428567218495" />
                  <mssgle:LineSegment
                    End="352.347622241316,39.7428567218495" />
                  <mssgle:CubicBezierSegment
                    Point1="352.347622241316,39.7428567218495"
                    Point2="356.347622241316,39.7428567218495"
                    Point3="356.347622241316,43.7428567218495" />
                  <mssgle:LineSegment
                    End="356.347622241316,71.985713443699" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="357.966651140485,77.9999997468789">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.9999994395177"
              Start="0,0"
              End="0,31.4999994395177">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.4999994395177" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="717.914273654989,855.685712630096">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-387.104763439817,42.5166640551727"
              Start="0,0"
              End="-387.104763439817,35.0166640551727">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.2583320275863" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.2583320275863"
                    Point2="0,21.2583320275863"
                    Point3="-4,21.2583320275863" />
                  <mssgle:LineSegment
                    End="-383.104763439817,21.2583320275863" />
                  <mssgle:CubicBezierSegment
                    Point1="-383.104763439817,21.2583320275863"
                    Point2="-387.104763439817,21.2583320275863"
                    Point3="-387.104763439817,25.2583320275863" />
                  <mssgle:LineSegment
                    End="-387.104763439817,35.0166640551727" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Sequence Container\For Loop Container\Import Coin List">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Sequence Container\For Loop Container\Import Coin List\Row Count"
          TopLeft="269.166651960049,115.266665865117" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination"
          TopLeft="249.999996274709,195.999997079372" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Sequence Container\For Loop Container\Import Coin List\Script Component"
          TopLeft="252.999996230006,36.9999994486571" />
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container\Import Coin List.Paths[Row Count Output 1]"
          TopLeft="334.783324117379,156.866665865117">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.1333312142553"
              Start="0,0"
              End="0,31.6333312142553">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.6333312142553" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container\Import Coin List.Paths[Output 0]"
          TopLeft="334.683324095028,78.5999994486571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.6666664164596"
              Start="0,0"
              End="0,29.1666664164596">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.1666664164596" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sequence Container\For Loop Container\Import Exchanges">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Sequence Container\For Loop Container\Import Exchanges\Script Component"
          TopLeft="289.166650867297,55.4666662809584" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination"
          TopLeft="279.166651413673,227.066665087673" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Sequence Container\For Loop Container\Import Exchanges\Row Count"
          TopLeft="301.666650184327,134.333332399196" />
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container\Import Exchanges.Paths[Row Count Output 1]"
          TopLeft="365.616650799,175.933332399196">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51.1333326884773"
              Start="0,0"
              End="0,43.6333326884773">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.6333326884773" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container\Import Exchanges.Paths[Output 0]"
          TopLeft="368.216650525812,97.0666662809584">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.2666661182377"
              Start="0,0"
              End="0,29.7666661182377">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.7666661182377" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\For Loop Container\Import Exchanges\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sequence Container\Foreach Loop Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination"
          TopLeft="340.833331201639,263.533329482145" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Script Component 1"
          TopLeft="340.833314711022,64.1333328873582" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Sequence Container\Foreach Loop Container\Data Flow Task\Row Count"
          TopLeft="356.66664717926,171.399998824795" />
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container\Data Flow Task.Paths[Output 0]"
          TopLeft="423.749980945141,105.733332887358">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.666665937437"
              Start="0,0"
              End="0,58.166665937437">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.166665937437" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container\Data Flow Task.Paths[Row Count Output 1]"
          TopLeft="423.94998919045,212.999998824795">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.5333306573496"
              Start="0,0"
              End="0,43.0333306573496">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.0333306573496" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Foreach Loop Container\Data Flow Task\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>