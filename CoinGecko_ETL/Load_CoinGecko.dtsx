<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/2/2025 6:23:14 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="FILIPE"
  DTS:CreatorName="FILIPE\filip"
  DTS:DTSID="{0530CC01-AC58-4E96-839A-55E47B3D10CE}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.2"
  DTS:LocaleID="2070"
  DTS:ObjectName="Load_CoinGecko"
  DTS:PackageType="5"
  DTS:VersionBuild="62"
  DTS:VersionGUID="{BE9F916A-9506-4DA1-AEC7-763E9CA49A4E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
      DTS:ObjectName="localhost.Datawarehouse_CG">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=Datawarehouse_CG;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Load_CoinGecko-{CB35FB99-233F-4EEC-809F-508B1C6C64F0}localhost.Datawarehouse_CG;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.Datawarehouse_CG 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{32B11589-F5CA-48C1-BBC2-0BF865559EE7}"
      DTS:ObjectName="localhost.Datawarehouse_CG 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=Datawarehouse_CG;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Load_CoinGecko-{32B11589-F5CA-48C1-BBC2-0BF865559EE7}localhost.Datawarehouse_CG 1;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{93A4D169-ABC4-4BD9-83D7-2AAE7CEBBAF7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ApiBaseUrl">
      <DTS:VariableValue
        DTS:DataType="8">https://api.coingecko.com/api/v3</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1DACDEB6-6595-4D27-B022-270837E3DCAB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CoinListEndpoint">
      <DTS:VariableValue
        DTS:DataType="8">/coins/list</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CE62C921-BFBF-4008-9A81-09A80E148DEF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedRows_Crypto">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{23649CA4-787D-4C2A-9970-1346E021966D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MarketChartEndpoint">
      <DTS:VariableValue
        DTS:DataType="8">/coins/{id}/market_chart?vs_currency=usd&amp;days=1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1EEDC6BE-5A66-47C5-90D7-05D36EE20A85}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PageIndex">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B9C6397-6D56-4B96-B04B-CF7DCDFEE7C5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RunId">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FCDEE49D-1802-43F3-AA13-783CA29C369E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SuccessRows_Crypto">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Audit START"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E1DE0569-EB64-41E1-8DC7-E120F05D37BF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Audit START"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
          SQLTask:SqlStatementSource="INSERT INTO dbo.DW_Audit&#xA;(run_id, start_on, process_name, execution_status)&#xA;VALUES (?, GETDATE(), 'CoinGecko_ETL', 'STARTED');&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::RunId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="50" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\End Audit Process"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{67F4163C-0653-4437-8E0C-C03AC2445CFB}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="End Audit Process"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
          SQLTask:SqlStatementSource="UPDATE dbo.DW_Audit&#xA;SET    success_row_count = ?,&#xA;       end_on            = GETDATE(),&#xA;       execution_status  = 'SUCCESS'&#xA;WHERE  run_id = ?;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::SuccessRows_Crypto"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="0" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::RunId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="50" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate RunId"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{1FDFBC68-257C-40A1-A6EC-555CECB8F10F}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate RunId"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7dbcb6698d6045889d6f0779e4808f61"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::RunId">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_7dbcb6698d6045889d6f0779e4808f61.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0054C3C3-F243-4910-A390-0D3107271B8D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7dbcb6698d6045889d6f0779e4808f61</RootNamespace>
    <AssemblyName>ST_7dbcb6698d6045889d6f0779e4808f61</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7dbcb6698d6045889d6f0779e4808f61.Properties.Settings.get_Default():ST_7dbcb6698d6045889d6f0779e4808f61.Properties.Sett" +
    "ings")]

namespace ST_7dbcb6698d6045889d6f0779e4808f61.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_7dbcb6698d6045889d6f0779e4808f61
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            Dts.Variables["User::RunId"].Value = Guid.NewGuid().ToString();
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_7dbcb6698d6045889d6f0779e4808f61</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_7dbcb6698d6045889d6f0779e4808f61</msb:DisplayName>
    <msb:ProjectId>{80EB7595-466E-4569-AF18-880A39ECC0DC}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_7dbcb6698d6045889d6f0779e4808f61.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7dbcb6698d6045889d6f0779e4808f61")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7dbcb6698d6045889d6f0779e4808f61")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7dbcb6698d6045889d6f0779e4808f61.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7dbcb6698d6045889d6f0779e4808f61.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7dbcb6698d6045889d6f0779e4808f61.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7dbcb6698d6045889d6f0779e4808f61.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7dbcb6698d6045889d6f0779e4808f61.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_7dbcb6698d6045889d6f0779e4808f61.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABVSbGgAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAApi0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFQtAABPAAAAAEAAAGAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGAEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
LQAAAAAAAEgAAAACAAUA/CAAAKALAAABAAAAAAAAAJwsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgA6AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACigT
AAAKChIA/hYPAAABbxQAAApvFQAACgIoEAAAChZvFgAACioeAigXAAAKKh4CKBgAAAoqrn4BAAAE
LR5yGQAAcNADAAACKBkAAApvGgAACnMbAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMA
AAQqHgIoHAAACioucwgAAAaAAwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADIAwAAI34AADQEAABkBQAAI1N0cmluZ3MAAAAAmAkAAIwAAAAjVVMAJAoAABAAAAAjR1VJRAAA
ADQKAABsAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAHgAAAAUAAAAGAAAA
CQAAAAEAAAAcAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAfQMB
AAAAAAAGAC0CTQQGALwCTQQGAHkBOgQPAMEEAAAGAKYB+wMGABAC+wMGAPEB+wMGAKMC+wMGAE0C
+wMGAGYC+wMGAL0B+wMGANgB6gIKAIECLAMKAPgALAMGAGEArgMGALUDrgMGAFwBOgQGADQFrgMG
AB0EbQQGAA0E5gMOACwBZwMOAI0BZwMOABQB0QMGAEEBTQQKAFUDLAMSAAMFowASAHYAowAGAMMA
rgMGAH8ArgMGAFoF+wMAAAAAJQAAAAAAAQABAAEAEADGAwEAOQABAAEAAAAQAHQE0ARJAAEAAwAA
ARAADQXQBF0AAwAHAAMBAAAmBQAAQQAEAAoAEQC6A20AEQDoAHEAEQBmAHUABgZNAHkAVoAWBXwA
VoDIAHwAUCAAAAAAhgDMAwYAAQCWIAAAAACGGC0EBgABAJ4gAAAAAIMYLQQGAAEApiAAAAAAkwgZ
BIAAAQDSIAAAAACTCNAAhQABANkgAAAAAJMI3ACKAAEA4SAAAAAAlgg7BZAAAgDoIAAAAACGGC0E
BgACAPAgAAAAAJEYMwSVAAIAAAABAOQCCQAtBAEAEQAtBAYAGQAtBAoAKQAtBBAAMQAtBBAAOQAt
BBAAQQAtBBAASQAtBBAAUQAtBBAAWQAtBBAAYQAtBBAAaQAtBAYAiQAtBAYAsQAtBBUAwQAtBAYA
cQAeBSAAyQD/BCUA0QClAyoAeQBeADAAkQAEAzUA2QDaAjkAyQBHBQEAcQAtBAYAkQAtBAYA4QCR
AD4A4QBWBUUAmQAtBEoAuQAtBAYACAAUAGMACAAYAGgAKQBzANAALgALAKgALgATALEALgAbANAA
LgAjANkALgArAAIBLgAzAAIBLgA7AAIBLgBDANkALgBLAAgBLgBTAAIBLgBbAB8BQwBjAGgASQBz
ANAAYQB7AGgAYwBrAGgAGwADAAEABAADAAAAHQSZAAAA8ACeAAAAPwWjAAIABAADAAIABQAFAAEA
BgAFAAIABwAHAASAAAABAAAAaCRSAAAAAAAAAAEAAAAEAAAAAAAAAAAAAABRAFUAAAAAABAAAAAA
AAAAAAAAAFoADQMAAAAABAAAAAAAAAAAAAAAUQCuAwAAAAAQAAAAAAAAAAAAAABaAC4AAAAAAAAA
AAABAAAAfgQAAAUAAgAAAABTVF83ZGJjYjY2OThkNjA0NTg4OWQ2ZjA3NzllNDgwOGY2MQA8TW9k
dWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBOZXdH
dWlkAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBzZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBN
aWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFz
a3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1Rf
N2RiY2I2Njk4ZDYwNDU4ODlkNmYwNzc5ZTQ4MDhmNjEuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVt
AHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdl
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF83ZGJjYjY2OThkNjA0NTg4OWQ2ZjA3NzllNDgw
OGY2MS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfN2Ri
Y2I2Njk4ZDYwNDU4ODlkNmYwNzc5ZTQ4MDhmNjEuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNl
dHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABz
ZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1ibHkAAAAXVQBzAGUAcgA6ADoAUgB1AG4ASQBkAABxUwBU
AF8ANwBkAGIAYwBiADYANgA5ADgAZAA2ADAANAA1ADgAOAA5AGQANgBmADAANwA3ADkAZQA0ADgA
MAA4AGYANgAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAX2Bd
OHxla0Kkd1ndMonO/wAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERVQQHARE9BCAAEmUEIAASaQUg
ARJtHAQAABE9AyAADgQgAQEcBgABEnERdQQgABJ5BiACAQ4SeQi3elxWGTTgiQiJhF3NgIDMkQQA
AAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAASUQUAAQESUQQAABIQAwAAAQQIABJN
BAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfN2RiY2I2Njk4ZDYwNDU4ODlkNmYwNzc5ZTQ4MDhmNjEAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyNQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAfC0AAAAAAAAA
AAAAli0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgtAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAEBAAAAAAAAAAAAAAEBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAUgBoJAAAAQBSAGgkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEZAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAQAMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwA3AGQAYgBjAGIANgA2ADkAOABkADYAMAA0ADUAOAA4ADkAZAA2AGYAMAA3ADcA
OQBlADQAOAAwADgAZgA2ADEAAAA4AAwAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4AOQAzADIAMAAuADgAMgAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NwBkAGIAYwBiADYANgA5ADgAZAA2ADAANAA1ADgAOAA5AGQANgBmADAANwA3ADkAZQA0ADgAMAA4
AGYANgAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwA3AGQAYgBjAGIANgA2ADkAOABkADYAMAA0ADUAOAA4ADkAZAA2AGYAMAA3ADcAOQBl
ADQAOAAwADgAZgA2ADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8ANwBkAGIAYwBiADYANgA5ADgAZAA2ADAANAA1ADgAOAA5AGQANgBmADAANwA3ADkAZQA0
ADgAMAA4AGYANgAxAAAAPAAMAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA5ADMAMgAwAC4AOAAyAAAAQAAMAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAzADIAMAAuADgAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAqD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{3240D3C7-4CF9-4764-99B5-B9AEF380B4DB}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\For Loop Container"
          DTS:AssignExpression="@PageIndex = @PageIndex + 1"
          DTS:CreationName="STOCK:FORLOOP"
          DTS:Description="For Loop Container"
          DTS:DTSID="{EA7402A6-9072-490A-A6B5-85F5D78A660D}"
          DTS:EvalExpression="@PageIndex == 0 "
          DTS:ExecutableType="STOCK:FORLOOP"
          DTS:InitExpression="@PageIndex = 0"
          DTS:LocaleID="-1"
          DTS:MaxConcurrent="1"
          DTS:ObjectName="For Loop Container">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Import Coin List"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{69A47EF3-272F-48FF-96F0-0AB181FFB8D5}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Import Coin List">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[Staging_Crypto_Dim]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
                          connectionManagerRefId="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_source_system]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="DW_source_system"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_source_system]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_source_system]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_updated_on]"
                              cachedDataType="dbTimeStamp"
                              cachedName="DW_updated_on"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_updated_on]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_updated_on]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[category]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="category"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[category]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="300"
                              cachedName="name"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[name]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[symbol]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="symbol"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[symbol]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[symbol]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_run_id]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="DW_run_id"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_run_id]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_run_id]" />
                            <inputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DW_row_checksum]"
                              cachedDataType="wstr"
                              cachedLength="64"
                              cachedName="DW_row_checksum"
                              externalMetadataColumnId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_row_checksum]"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_row_checksum]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[symbol]"
                              dataType="wstr"
                              length="100"
                              name="symbol" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                              dataType="wstr"
                              length="300"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category]"
                              dataType="wstr"
                              length="100"
                              name="category" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_row_checksum]"
                              dataType="wstr"
                              length="64"
                              name="DW_row_checksum" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_run_id]"
                              dataType="wstr"
                              length="50"
                              name="DW_run_id" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_updated_on]"
                              dataType="dbTimeStamp"
                              name="DW_updated_on" />
                            <externalMetadataColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DW_source_system]"
                              dataType="wstr"
                              length="50"
                              name="DW_source_system" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Sequence Container\For Loop Container\Import Coin List\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::SuccessRows_Crypto</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Sequence Container\For Loop Container\Import Coin List\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component"
                      version="13">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ApiBaseUrl
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ApiBaseUrl"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String CoinListEndpoint
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CoinListEndpoint"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String RunId
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["RunId"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Namespaces
using System;
using System.Collections.Generic;
using System.Net;
using Newtonsoft.Json;
using System.Security.Cryptography;
using System.Text;
#endregion

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    // ---------- DTO para o JSON ----------
    private class Coin
    {
        public string id { get; set; }
        public string symbol { get; set; }
        public string name { get; set; }
    }

    // ---------- Helper: corta texto ----------
    private string Clip(string s, int max) =>
        string.IsNullOrEmpty(s) ? string.Empty :
        (s.Length > max ? s.Substring(0, max) : s);

    // ---------- Helper: MD5 ----------
    private string GetMD5(string input)
    {
        using (var md5 = MD5.Create())
        {
            var hash = md5.ComputeHash(Encoding.UTF8.GetBytes(input ?? ""));
            var sb = new StringBuilder(32);
            foreach (byte b in hash)
                sb.Append(b.ToString("X2"));   // 32 chars, maiúsculas
            return sb.ToString();
        }
    }

    // ---------- MAIN ----------
    public override void CreateNewOutputRows()
    {
        // TLS 1.2 para CoinGecko
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

        string url = Variables.ApiBaseUrl + Variables.CoinListEndpoint;   // https://api.coingecko.com/api/v3/coins/list
        string json;

        // Download
        using (var wc = new WebClient())
        {
            wc.Headers.Add("User-Agent", "SSIS-CoinGecko");
            json = wc.DownloadString(url);
        }

        var coins = JsonConvert.DeserializeObject<List<Coin>>(json);

        var symbolSeen = new HashSet<string>(StringComparer.OrdinalIgnoreCase);     

        foreach (var c in coins)
        {
            // IGNORA moedas sem símbolo
            if (string.IsNullOrWhiteSpace(c.symbol))continue;
            if (!symbolSeen.Add(c.symbol)) continue;

            string symbolSafe = Clip(c.symbol, 50);
            string nameSafe = Clip(c.name, 200);

            // ---------- calcular checksum ----------
            string concat = $"{symbolSafe}|{nameSafe}|";
            string checksum = GetMD5(concat);      // 32 caracteres

            // ---------- nova linha ----------
            Output0Buffer.AddRow();

            // campos principais
            Output0Buffer.symbol = symbolSafe;
            Output0Buffer.name = nameSafe;
            Output0Buffer.category_IsNull = true;   // não vem no endpoint

            // metadados / auditoria
            Output0Buffer.DWrunid = Variables.RunId;
            Output0Buffer.DWupdatedon = DateTime.UtcNow;
            Output0Buffer.DWsourcesystem = "CoinGecko";
            Output0Buffer.DWrowchecksum = checksum;
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DWsourcesystem
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DWsourcesystem_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime DWupdatedon
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DWupdatedon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DWrunid
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DWrunid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String category
    {
        set
        {
            this[3] = value;
        }
    }
    public bool category_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String name
    {
        set
        {
            this[4] = value;
        }
    }
    public bool name_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String symbol
    {
        set
        {
            this[5] = value;
        }
    }
    public bool symbol_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DWrowchecksum
    {
        set
        {
            this[6] = value;
        }
    }
    public bool DWrowchecksum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties.Settings.get_Default():SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties.Sett" +
    "ings")]

namespace SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f8669947a7184a4c8e532bf78a4bbf3c.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ED25E560-AF96-4E34-A3C6-07345FE8E4F7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f8669947a7184a4c8e532bf78a4bbf3c</RootNamespace>
    <AssemblyName>SC_f8669947a7184a4c8e532bf78a4bbf3c</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.1.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\filip\OneDrive\Ambiente de Trabalho\net\newtonsoft.json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_f8669947a7184a4c8e532bf78a4bbf3c</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_f8669947a7184a4c8e532bf78a4bbf3c</msb:DisplayName>
    <msb:ProjectId>{15E97883-017F-4C7A-AEA6-B9C6B5D2DAEC}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f8669947a7184a4c8e532bf78a4bbf3c.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f8669947a7184a4c8e532bf78a4bbf3c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f8669947a7184a4c8e532bf78a4bbf3c")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f8669947a7184a4c8e532bf78a4bbf3c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f8669947a7184a4c8e532bf78a4bbf3c.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKdibGgAAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAAikEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADhBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAkCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABs
QQAAAAAAAEgAAAACAAUAhCUAAPwaAAABAAAAAAAAAIBAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIoDKBAAAAotFANvEQAACgQwAgMqAxYEbxIAAAoqfhMAAAoq
ABswBABmAAAAAQAAESgUAAAKCgYoFQAACgMlLQYmcgEAAHBvFgAACm8XAAAKHyBzGAAACgsMFg0r
HAgJkRMEBxIEcgMAAHAoGQAACm8aAAAKJgkXWA0JCI5pMt4HbxsAAAoTBd4KBiwGBm8cAAAK3BEF
KgAAARAAAAIABgBTWQAKAAAAABswBABzAQAAAgAAESAADAAAKB0AAAoCewIAAARvHwAABgJ7AgAA
BG8gAAAGKB4AAAoKcx8AAAoNCW8gAAAKcgkAAHByHwAAcG8hAAAKCQZvIgAACgveCgksBglvHAAA
CtwHKAEAACsoJAAACnMlAAAKDG8mAAAKEwQ45AAAABIEKCcAAAoTBREFbysAAAYoKAAACjrKAAAA
CBEFbysAAAZvKQAACjm4AAAAAhEFbysAAAYfMigBAAAGEwYCEQVvLQAABiDIAAAAKAEAAAYTBxEG
cj0AAHARB3I9AABwKCoAAAoTCAIRCCgCAAAGEwkCewMAAARvFAAABgJ7AwAABBEGbxAAAAYCewMA
AAQRB28OAAAGAnsDAAAEF28NAAAGAnsDAAAEAnsCAAAEbyEAAAZvCgAABgJ7AwAABCgrAAAKbwgA
AAYCewMAAARyQQAAcG8GAAAGAnsDAAAEEQlvEgAABhIEKCwAAAo6EP///94OEgT+FgMAABtvHAAA
CtwqAAEcAAACACwAH0sACgAAAAACAG0A92QBDgAAAAAeAigXAAAGKioCAwQFKC0AAAoqJgIWAygu
AAAKKloDLAgCFigvAAAKKnJVAABwczAAAAp6OgIXA4wZAAABKC4AAAoqWgMsCAIXKC8AAAoqclUA
AHBzMAAACnomAhgDKC4AAAoqWgMsCAIYKC8AAAoqclUAAHBzMAAACnomAhkDKC4AAAoqWgMsCAIZ
KC8AAAoqclUAAHBzMAAACnomAhoDKC4AAAoqWgMsCAIaKC8AAAoqclUAAHBzMAAACnomAhsDKC4A
AAoqWgMsCAIbKC8AAAoqclUAAHBzMAAACnomAhwDKC4AAAoqWgMsCAIcKC8AAAoqclUAAHBzMAAA
CnoeAigxAAAKKh4CKDIAAAoqHgIoMwAACip+Aig0AAAKAgJzHAAABn0BAAAEAgJzHgAABn0CAAAE
KgYqbgJ7AwAABCwSAnsDAAAEbxUAAAYCFH0DAAAEKgAAABMwBQBJAAAAAwAAERYKKy4EBpQOBHLy
AABwKDUAAAozGQIFBpoCBAaUKDYAAAoOBHMFAAAGfQMAAAQGF1gKBgMyzgJvGwAABgJvGAAABgIo
GQAABio6Aig3AAAKAgN9BAAABCqCAnsEAAAEbzgAAApvOQAACnIEAQBwbzoAAApvOwAACio6Aig3
AAAKAgN9BQAABCqWAnsFAAAEbzwAAApyGgEAcG89AAAKKD4AAApvPwAACnQiAAABKpYCewUAAARv
PAAACnIwAQBwbz0AAAooPgAACm8/AAAKdCIAAAEqlgJ7BQAABG88AAAKclIBAHBvPQAACig+AAAK
bz8AAAp0IgAAASoeAig3AAAKKq5+BgAABC0ecl4BAHDQBwAAAihAAAAKb0EAAApzQgAACoAGAAAE
fgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKEMAAAoqLnMnAAAGgAgAAAQqHgJ7CQAABCoi
AgN9CQAABCoeAnsKAAAEKiICA30KAAAEKh4CewsAAAQqIgIDfQsAAAQqAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAABAKAAAjfgAAfAoAAPALAAAjU3RyaW5ncwAAAABsFgAA0AEA
ACNVUwA8GAAAEAAAACNHVUlEAAAATBgAALACAAAjQmxvYgAAAAAAAAACAAABVxWiCQkLAAAA+gEz
ABYAAAEAAAA4AAAACQAAAAsAAAAvAAAAHgAAAEMAAAAZAAAAAwAAAAYAAAAYAAAAHAAAAAMAAAAB
AAAACAAAAAEAAAABAAAAAQAAAAAAVAUBAAAAAAAGACUEBAkGALkEBAkGAHED8QgPAHgJAAAGAJ4D
8wYGAAgE8wYGAOkD8wYGAKAE8wYGAEUE8wYGAF4E8wYGALUD8wYGANAD6wQKAHkEfQIGANAAqAsG
APYHQgsOALwANQESAIQKXgoGAMYANQFLAM8IAAAGAFcKYwYGADkDBAkKACEIfQIWABIIfQIKAJIH
fQIGAHQCYwYKAKwKfQIaAGYAbAgGAFQD8QgGADIIJAkGAIYH3gYSACQDPgUSAIUDPgUSAOcCyQYG
ABYFYwYGAOIEQgsGAH0GqAsGANcEYwYGABcCYwYSAFgIXgoSAJ4CXgoSADkHXgoSAAUHcgEeAPoK
dgcGAL0IYwYGAKgANQEGAFwHYwYiAAEAlAgiACoAlAgiAE0AlAgaAH8AbAgaABoAbAhrAGILAAAa
AJAAbAgGAK4CYwYGACMCYwYGAMkL8wYAAAAA3QAAAAAAAQABAAEAEACpBgAAEAABAAEAAQAQAAQI
AABZAAEABQABABAAjgoAAGkAAQAXAAEAEAADCgAAUQAEABwAAQAQAMIJAABRAAUAHgAAABAAKwmH
CVEABgAiAAABEAD6CYcJhQAIACYAAwAQALQGAABRAAkAKQAGAAMKcAEGAMIJdAEGAAQIeAEBAJwK
fAEBAJwKfAERAJ0GgAERANcChAERAAcCiAEBAKsBKgABANUBKgABAL8BKgBQIAAAAACBAPEHjAEB
AHQgAAAAAIEAzQBRAAMA+CAAAAAAxgAxCgYABACUIgAAAACGGNoIBgAEAJwiAAAAAIYY2gjrAAQA
pyIAAAAAhghqBhAABwCxIgAAAACGCLEFkgEIAMgiAAAAAIYIuQaXAQkA1yIAAAAAhgjkBZIBCgDu
IgAAAACGCJ8BEAALAPgiAAAAAIYIfAWSAQwADyMAAAAAhgjSCxAADQAZIwAAAACGCPsFkgEOADAj
AAAAAIYIawIQAA8AOiMAAAAAhgiPBZIBEABRIwAAAACGCCIGEAARAFsjAAAAAIYInwWSARIAciMA
AAAAhgiLBhAAEwB8IwAAAACGCMsFkgEUAJMjAAAAAIYAnQsGABUAmyMAAAAAhgBpCgYAFQCjIwAA
AACGAGwK5wAVAKsjAAAAAIYY2ggGABUAyyMAAAAAxgEjCgYAFQDNIwAAAACBAF4BBgAVAOwjAAAA
AMYALQudARUAyyMAAAAAxgExCgYAGQBBJAAAAACGGNoIqQEZAFAkAAAAAIYITQcfARoAcSQAAAAA
hhjaCKkBGgCAJAAAAACGCEIGXAAbAKYkAAAAAIYIyApcABsAzCQAAAAAhghQAVwAGwDyJAAAAACD
GNoIBgAbAPokAAAAAJMILgivARsAJiUAAAAAkwi/ArQBGwAtJQAAAACTCMsCuQEbADUlAAAAAJYI
eAq/ARwAPCUAAAAAhhjaCAYAHABEJQAAAACRGOAIxAEcAFAlAAAAAIYIkQFcABwAWCUAAAAAhgiY
ARAAHABhJQAAAACGCBcGXAAdAGklAAAAAIYIIgYQAB0AciUAAAAAhghiAlwAHgB6JQAAAACGCGsC
EAAeAPIkAAAAAIYY2ggGAB8AAAABAEMKAAACAKQLAAABACcLAAABACcIAAACANUJAAADAKAHAAAB
ANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwE
AAABANwEAAABANwEAAABANwEAAABANwEAAABACkKAAACAOcIAAADABsKAAAEAKAHAAABALIKAAAB
ALIKAAABANwEAAABANwEAAABANwEAAABANwECQDaCAEAEQDaCAYAGQDaCAoAKQDaCBAAMQDaCBAA
OQDaCBAAQQDaCBAASQDaCBAAUQDaCBAAWQDaCBAAYQDaCBAAaQDaCAYAqQDaCAYA4QDaCAYAAQHa
CBUAEQHfCxsAEQEzBSAAEQEdBSQAEQHnCyoAcQAdAzkAGQHUAD4AGQHMCUQAIQEnBUoAeQDaCAEA
KQEUBVEAeQDtAVYAoQAUBVwAMQEVAwYAOQEtBngAEQFFCn8AiQDaCAYAiQAPCoUAUQFaAYsAiQAF
BVEAWQFMCpEAYQH/AqEADADaCK0AFADMCL8AHAC8Cs8AEQH0ARsADABaAdQAEQFFCtoAyQCSC+IA
HAA5C+cAsQDaCOsAsQBaBvUAsQAPBgEAcQHaCBAAsQCdCwYAsQBpCgYAsQBsCucA0QDaCAYA0QDm
AP8A0QDpCQYBoQDaCAYA0QDyAAwBeQEZBxIBgQFHAhgBiQFCCB8B0QC2CSQBkQFRBioB0QB9CzEB
mQFOCzcBsQE1Aj4BsQHFC0cB6QDaCE0BCQHaCAYALgALAOkBLgATAPIBLgAbABECLgAjABoCLgAr
AEMCLgAzAEMCLgA7AEMCLgBDABoCLgBLAEkCLgBTAEMCLgBbAGACQwBjAKoC4wBzAKoCAQFrAKoC
IQFrAKoCQQFrAKoCYQFrAKoCaQJ7ABECiQJ7ABECIAVrAKoCQAVrAKoCYAVrAKoCgAVrAKoCoAVr
AKoCwAVrAKoCLQBgAPsAAwABAAUADwAGABAABwATAAgAFQAJABYAAABuBsgBAAC1BcwBAAC9BtAB
AADoBcwBAACjAcgBAACABcwBAADWC8gBAAD/BcwBAABvAsgBAACTBcwBAAAmBsgBAACjBcwBAACP
BsgBAADPBcwBAABRB9UBAABGBsgBAADMCsgBAABUAcgBAAAyCNoBAADfAt8BAAB8CuQBAACoAcgB
AAAmBsgBAABvAsgBAQAGAAMAAQAHAAUAAQAIAAcAAQAJAAkAAQAKAAsAAQALAA0AAQAMAA8AAQAN
ABEAAQAOABMAAQAPABUAAQAQABcAAQARABkAAQASABsAAQATAB0AAgAdAB8AAgAfACEAAgAgACMA
AgAhACUAAgAjACcAAgAkACkAAQAlACkAAgAmACsAAgApAC0AAQAqAC0AAgArAC8AAQAsAC8AAgAt
ADEAAQAuADEApwC4AMgABIAAAAEAAAAAAAAAAAAAAAAAEQEAAAQAAAAAAAAAAAAAAFUBCAEAAAAA
EAAAAAAAAAAAAAAAXgHdCgAAAAAEAAAAAAAAAAAAAABVAbMCAAAAAAQAAAAAAAAAAAAAAFUBYwYA
AAAAEAAAAAAAAAAAAAAAXgEGCwAAAAAQAAAAAAAAAAAAAABeAaoHAAAAAA0AAAAAAAAAAAAAAGcB
dgcAAAAAEAAAAAAAAAAAAAAAXgHNBwAAAAAAAAAAAQAAADUJAAAJAAIARwCYAAAAAElEVFNDb21w
b25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29s
bGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2Vy
MTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAASUVxdWFsaXR5Q29t
cGFyZXJgMQBIYXNoU2V0YDEATGlzdGAxAEdldE1ENQBnZXRfVVRGOAA8TW9kdWxlPgBHZXRPdXRw
dXRJRABnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAU0NfZjg2Njk5NDdhNzE4NGE0Yzhl
NTMyYmY3OGE0YmJmM2MAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZ2V0X1J1bklkAEFkZABN
YXJrT3V0cHV0c0ZpbmlzaGVkAFN5c3RlbS5Db2xsZWN0aW9ucy5TcGVjaWFsaXplZABnZXRfaWQA
c2V0X2lkAHNldF9EV3J1bmlkADxpZD5rX19CYWNraW5nRmllbGQAPG5hbWU+a19fQmFja2luZ0Zp
ZWxkADxzeW1ib2w+a19fQmFja2luZ0ZpZWxkAEFwcGVuZABJc051bGxPcldoaXRlU3BhY2UAZGVm
YXVsdEluc3RhbmNlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdldF9uYW1lAHNldF9uYW1lAERhdGVUaW1l
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNlY3VyaXR5UHJvdG9jb2xUeXBlAFN5
c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBnZXRfT3JkaW5hbElnbm9yZUNhc2UARGlzcG9zZQBDcmVhdGUARWRp
dG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAQnl0ZQB2YWx1ZQBFbmNvZGluZwBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAERvd25sb2FkU3RyaW5nAFRvU3RyaW5nAFN1YnN0cmluZwBD
b21wdXRlSGFzaABnZXRfTGVuZ3RoAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19mODY2OTk0N2E3
MTg0YTRjOGU1MzJiZjc4YTRiYmYzYy5kbGwAc2V0X0RXcnVuaWRfSXNOdWxsAHNldF9uYW1lX0lz
TnVsbABzZXRfc3ltYm9sX0lzTnVsbABzZXRfRFdzb3VyY2VzeXN0ZW1fSXNOdWxsAHNldF9EV3Jv
d2NoZWNrc3VtX0lzTnVsbABzZXRfRFd1cGRhdGVkb25fSXNOdWxsAHNldF9jYXRlZ29yeV9Jc051
bGwAU2V0TnVsbABnZXRfc3ltYm9sAHNldF9zeW1ib2wAc2V0X1NlY3VyaXR5UHJvdG9jb2wAZ2V0
X0FwaUJhc2VVcmwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHNldF9EV3NvdXJjZXN5c3RlbQBI
YXNoQWxnb3JpdGhtAHNldF9EV3Jvd2NoZWNrc3VtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AQ29p
bgBzZXRfRFd1cGRhdGVkb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRp
b24AU3lzdGVtLlJlZmxlY3Rpb24ATmFtZVZhbHVlQ29sbGVjdGlvbgBnZXRfUnVudGltZUNvbm5l
Y3Rpb25Db2xsZWN0aW9uAFdlYkhlYWRlckNvbGxlY3Rpb24AZ2V0X0Nvbm5lY3Rpb24ASW52YWxp
ZE9wZXJhdGlvbkV4Y2VwdGlvbgBOZXd0b25zb2Z0Lkpzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFt
ZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABDbGlwAFN0cmluZ0J1aWxkZXIAT3V0cHV0MEJ1
ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRf
Q29ubmVjdGlvbk1hbmFnZXIAU2VydmljZVBvaW50TWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3Jh
cHBlcgBTdHJpbmdDb21wYXJlcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTQ19mODY2OTk0N2E3MTg0YTRjOGU1MzJiZjc4YTRiYmYzYy5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZjg2Njk5NDdhNzE4NGE0Yzhl
NTMyYmY3OGE0YmJmM2MuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAR2V0Qnl0ZXMA
QnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAENvbm5lY3Rpb25z
AGdldF9IZWFkZXJzAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENv
bmNhdABEZXNlcmlhbGl6ZU9iamVjdABTeXN0ZW0uTmV0AFNldEVuZE9mUm93c2V0AGdldF9EZWZh
dWx0AFdlYkNsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25l
bnQAZ2V0X0N1cnJlbnQAZ2V0X0NvaW5MaXN0RW5kcG9pbnQATWljcm9zb2Z0LlNxbFNlcnZlci5U
eFNjcmlwdABKc29uQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABpbnB1
dABQcmltZU91dHB1dABNb3ZlTmV4dABTeXN0ZW0uVGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNj
cmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AGdldF9VdGNOb3cA
QWRkUm93AG1heABTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5AGdldF9Bc3NlbWJseQBzZXRf
Y2F0ZWdvcnkASXNOdWxsT3JFbXB0eQAAAAAAAQAFWAAyAAAVVQBzAGUAcgAtAEEAZwBlAG4AdAAB
HVMAUwBJAFMALQBDAG8AaQBuAEcAZQBjAGsAbwABA3wAABNDAG8AaQBuAEcAZQBjAGsAbwAAgJtJ
AHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQA
IAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAg
AHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAA
ABVDAG8AbgBuAGUAYwB0AGkAbwBuAAAVQQBwAGkAQgBhAHMAZQBVAHIAbAAAIUMAbwBpAG4ATABp
AHMAdABFAG4AZABwAG8AaQBuAHQAAAtSAHUAbgBJAGQAAHFTAEMAXwBmADgANgA2ADkAOQA0ADcA
YQA3ADEAOAA0AGEANABjADgAZQA1ADMAMgBiAGYANwA4AGEANABiAGIAZgAzAGMALgBQAHIAbwBw
AGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAFQVOHQI7A5Hs11+9Hq7N2YABCABAQgD
IAABBSABARERBCABAQ4FIAEBEX0EAAECDgMgAAgFIAIOCAgCBg4LBwYSORI9HQUIBQ4EAAASOQUA
ABKAjQUgAR0FDgYgAR0FHQUEIAEODgUgARI9DgMgAA4XBwoODhUSQQEOEkUVEU0BEiQSJA4ODg4G
AAEBEYChBQACDg4OBSAAEoClBSACAQ4OBhABAR4ADggKARUSSQESJAUAABKAsQUVEkEBDgogAQEV
EoC1ARMABhUSSQESJAggABURTQETAAYVEU0BEiQEIAATAAUgAQITAAcABA4ODg4OBAAAEWUDIAAC
CSADARJdHQgSYQUgAgEIHAMHAQgGAAIIEmEOBSABHQgIBSAAEoC9BSAAEoDBBiABEoDFDgQgABJt
BSAAEoDJBiABEoDNHAUAABKA0QYgARwSgNUIAAESgNkRgN0FIAASgOEHIAIBDhKA4Qi3elxWGTTg
iQiJhF3NgIDMkQgwrU/msqau7QMGEhQDBhIYAwYSDAMGEmkDBhJ1AwYSeQMGEiAFIAIODggEIAEB
AgUgAQERZQsgBAEIHQgdEl0SYQUgAQESaQQAABJ1BAAAEnkFAAEBEnkEAAASIAMAAAEDKAAOAygA
AgQoABFlBCgAEm0ECAASdQQIABJ5BAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2Y4NjY5OTQ3YTcxODRhNGM4ZTUzMmJmNzhhNGJiZjNj
AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAAGBBAAAAAAAAAAAAAHpBAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsQQAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
AGYAOAA2ADYAOQA5ADQANwBhADcAMQA4ADQAYQA0AGMAOABlADUAMwAyAGIAZgA3ADgAYQA0AGIA
YgBmADMAYwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZgA4ADYANgA5ADkANAA3AGEA
NwAxADgANABhADQAYwA4AGUANQAzADIAYgBmADcAOABhADQAYgBiAGYAMwBjAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBmADgANgA2ADkA
OQA0ADcAYQA3ADEAOAA0AGEANABjADgAZQA1ADMAMgBiAGYANwA4AGEANABiAGIAZgAzAGMALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZgA4ADYANgA5ADkA
NAA3AGEANwAxADgANABhADQAYwA4AGUANQAzADIAYgBmADcAOABhADQAYgBiAGYAMwBjAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACMMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_f8669947a7184a4c8e532bf78a4bbf3c</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ApiBaseUrl,User::CoinListEndpoint,User::RunId</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">EC</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
                          connectionManagerRefId="Package.ConnectionManagers[localhost.Datawarehouse_CG]"
                          name="Connection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_source_system]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_source_system]"
                              name="DW_source_system" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_updated_on]"
                              dataType="dbTimeStamp"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_updated_on]"
                              name="DW_updated_on" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_run_id]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_run_id]"
                              name="DW_run_id" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[category]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[category]"
                              name="category" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[name]"
                              dataType="wstr"
                              length="300"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[name]"
                              name="name" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[symbol]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[symbol]"
                              name="symbol" />
                            <outputColumn
                              refId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_row_checksum]"
                              dataType="wstr"
                              length="64"
                              lineageId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0].Columns[DW_row_checksum]"
                              name="DW_row_checksum" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Sequence Container\For Loop Container\Import Coin List.Paths[Output 0]"
                      endId="Package\Sequence Container\For Loop Container\Import Coin List\Row Count.Inputs[Row Count Input 1]"
                      name="Output 0"
                      startId="Package\Sequence Container\For Loop Container\Import Coin List\Script Component.Outputs[Output 0]" />
                    <path
                      refId="Package\Sequence Container\For Loop Container\Import Coin List.Paths[Row Count Output 1]"
                      endId="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Row Count Output 1"
                      startId="Package\Sequence Container\For Loop Container\Import Coin List\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Merge to Crypto_Dim"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{29E19BE9-A799-4F14-B34B-97D245FCF7DA}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge to Crypto_Dim"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
                  SQLTask:SqlStatementSource="MERGE dbo.Crypto_Dim AS T&#xA;USING dbo.Staging_Crypto_Dim AS S&#xA;ON  T.symbol = S.symbol         -- chave natural&#xA;AND T.DW_row_checksum &lt;&gt; S.DW_row_checksum&#xA;WHEN MATCHED THEN&#xA;    UPDATE SET&#xA;        T.name            = S.name,&#xA;        T.category        = S.category,&#xA;        T.DW_row_checksum = S.DW_row_checksum,&#xA;        T.DW_run_id       = S.DW_run_id,&#xA;        T.DW_updated_on   = S.DW_updated_on,&#xA;        T.DW_source_system= S.DW_source_system;&#xA;&#xA;/*-- Insere se ainda não existir --*/&#xA;MERGE dbo.Crypto_Dim AS T&#xA;USING dbo.Staging_Crypto_Dim AS S&#xA;ON  T.symbol = S.symbol&#xA;WHEN NOT MATCHED THEN&#xA;    INSERT (symbol, name, category,&#xA;            DW_row_checksum, DW_run_id, DW_updated_on, DW_source_system)&#xA;    VALUES (S.symbol, S.name, S.category,&#xA;            S.DW_row_checksum, S.DW_run_id, S.DW_updated_on, S.DW_source_system);&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\For Loop Container\Truncate Staging_Crypto_Dim"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{94C3EBA0-E8D2-4CBB-9800-EC532FB3E8F4}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate Staging_Crypto_Dim"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{CB35FB99-233F-4EEC-809F-508B1C6C64F0}"
                  SQLTask:SqlStatementSource="TRUNCATE TABLE dbo.Staging_Crypto_Dim;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{3805F502-D3B4-461B-9CCB-9F28D51BDFFC}"
              DTS:From="Package\Sequence Container\For Loop Container\Truncate Staging_Crypto_Dim"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\For Loop Container\Import Coin List" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{71C410D8-702B-496F-AAD1-D3E58322E72A}"
              DTS:From="Package\Sequence Container\For Loop Container\Import Coin List"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container\For Loop Container\Merge to Crypto_Dim" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{F86DF0DD-938D-491A-B231-EE2063DACC45}"
      DTS:From="Package\Audit START"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Sequence Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{2970961F-DD36-44D0-9630-099CAB7B5208}"
      DTS:From="Package\Generate RunId"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Audit START" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{CADE75CC-941E-4D35-AE4E-3FF5E95C6625}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\End Audit Process" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Audit START"
          TopLeft="279.166651413673,116.999999186397" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Generate RunId"
          TopLeft="289.166650867297,36.3999997468789" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="357.966651140485,77.9999997468789">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.9999994395177"
              Start="0,0"
              End="0,31.4999994395177">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.4999994395177" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Sequence Container\For Loop Container\Truncate Staging_Crypto_Dim"
          TopLeft="11.9904624660341,20.8190449931318" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Sequence Container\For Loop Container\Import Coin List"
          TopLeft="13.4714179951528,109.728568194821" />
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="93.1309402305935,62.4190449931318">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47.3095232016894"
              Start="0,0"
              End="0,39.8095232016894">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.8095232016894" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Sequence Container\For Loop Container\Merge to Crypto_Dim"
          TopLeft="13.1809385914657,193.390473357931" />
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="93.7261782933093,151.328568194821">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.0619051631098"
              Start="0,0"
              End="0,34.5619051631098">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5619051631098" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="246.4,384"
          Size="246.4,427.2"
          Id="Package\Sequence Container\For Loop Container"
          TopLeft="18.4857012117198,44.2095217346199" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="744.8,526.4"
          Size="744.8,569.6"
          Id="Package\Sequence Container"
          TopLeft="220.714273654989,238.085712630096" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="361.566651413673,158.599999186397">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="231.547622241316,79.4857134436995"
              Start="0,0"
              End="231.547622241316,71.9857134436995">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.7428567218497" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.7428567218497"
                    Point2="0,39.7428567218497"
                    Point3="4,39.7428567218497" />
                  <mssgle:LineSegment
                    End="227.547622241316,39.7428567218497" />
                  <mssgle:CubicBezierSegment
                    Point1="227.547622241316,39.7428567218497"
                    Point2="231.547622241316,39.7428567218497"
                    Point3="231.547622241316,43.7428567218497" />
                  <mssgle:LineSegment
                    End="231.547622241316,71.9857134436995" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="164,41.6"
          Id="Package\End Audit Process"
          TopLeft="246.428557964309,855.333329364327" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="593.114273654989,807.685712630096">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-264.285715690681,47.6476167342305"
              Start="0,0"
              End="-264.285715690681,40.1476167342305">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.8238083671152" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.8238083671152"
                    Point2="0,23.8238083671152"
                    Point3="-4,23.8238083671152" />
                  <mssgle:LineSegment
                    End="-260.285715690681,23.8238083671152" />
                  <mssgle:CubicBezierSegment
                    Point1="-260.285715690681,23.8238083671152"
                    Point2="-264.285715690681,23.8238083671152"
                    Point3="-264.285715690681,27.8238083671152" />
                  <mssgle:LineSegment
                    End="-264.285715690681,40.1476167342305" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Sequence Container\For Loop Container\Import Coin List">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Sequence Container\For Loop Container\Import Coin List\Script Component"
          TopLeft="252.999996230006,36.9999994486571" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination"
          TopLeft="249.999996274709,195.999997079372" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Sequence Container\For Loop Container\Import Coin List\Row Count"
          TopLeft="269.166651960049,115.266665865117" />
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container\Import Coin List.Paths[Output 0]"
          TopLeft="334.683324095028,78.5999994486571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.6666664164596"
              Start="0,0"
              End="0,29.1666664164596">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.1666664164596" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\For Loop Container\Import Coin List.Paths[Row Count Output 1]"
          TopLeft="334.783324117379,156.866665865117">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.1333312142553"
              Start="0,0"
              End="0,31.6333312142553">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.6333312142553" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\For Loop Container\Import Coin List\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>